@model IEnumerable<prjVegetable.Models.CProviderWrap>

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_LayoutERP.cshtml";
}


<h1>廠商資料列表</h1>
<br />


<p>
    <a asp-action="Create" class="btn btn-outline-primary">新增廠商資料</a>
</p>
<table class="table" id="List">
    <thead>
        <tr>
            <th>
                序號
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FId)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FUbn)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FTel)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FConnect)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FAccountant)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FAddress)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FDelivery)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FInvoiceAdd)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @{
            var count = 0;
            foreach (var item in Model)
            {
                count++;
                <tr>
                    <td>
                        @count
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.provider.FId)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.provider.FName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.provider.FUbn)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.provider.FTel)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.provider.FConnect)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.provider.FAccountant)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.provider.FAddress)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.provider.FDelivery)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.provider.FInvoiceAdd)
                    </td>
                    <td>
                        <a asp-action="Details" asp-route-id="@item.FId" class="btn btn-secondary mb-2">詳細資料</a> <br>
                        <a href="javascript:void(0);" class="btn btn-danger delete-link" data-id="@item.FId">&emsp;移除&emsp;</a>
                    </td>
                </tr>
            }
        }
    </tbody>
</table>

@section Scripts {
    <script>
        $(document).ready(function () {
            $('#List').DataTable({
                "paging": true, // 啟用分頁
                "lengthChange": false, // 允許用戶改變每頁顯示數量
                "searching": true, // 啟用搜尋
                "ordering": true, // 啟用排序
                "info": true, // 顯示資訊
                "autoWidth": false, // 禁用自動調整寬度
                "language": {
                    "lengthMenu": "顯示 _MENU_ 筆資料",
                    "zeroRecords": "沒有符合的訂單",
                    "info": "顯示第 _START_ 到 _END_ 筆，共 _TOTAL_ 筆",
                    "infoEmpty": "沒有可顯示的資料",
                    "infoFiltered": "(從 _MAX_ 筆資料過濾)",
                    "search": "搜尋：",
                    "paginate": {
                        "first": "第一頁",
                        "last": "最後一頁",
                        "next": "下一頁",
                        "previous": "上一頁"
                    }
                },
                "lengthMenu": [5, 10, 25, 50], // 選擇每頁顯示 5, 10, 25, 50 筆
                "lengthChange": true, // 允許改變筆數
            });
        });

        // 使用 Axios 進行刪除操作
        document.addEventListener('DOMContentLoaded', function () {
            document.querySelectorAll('.delete-link').forEach(function (deleteLink) {
                deleteLink.addEventListener('click', function (e) {
                    e.preventDefault();

                    const id = deleteLink.getAttribute('data-id');

                    Swal.fire({
                        title: '確定要刪除這筆資料嗎？',
                        text: '這個動作無法復原！',
                        icon: 'warning',
                        showCancelButton: true,
                        confirmButtonText: '刪除',
                        cancelButtonText: '取消',
                        reverseButtons: true
                    }).then((result) => {
                        if (result.isConfirmed) {
                            // 使用 axios 發送刪除請求
                            axios.post(`/Providers/Delete/${id}`).then(() => {
                                Swal.fire('已刪除', '資料已成功刪除', 'success');
                                // 刪除後更新頁面
                                location.reload();
                            }).catch(error => {
                                console.error('刪除失敗', error);
                                Swal.fire('錯誤!!', '刪除資料失敗，請稍後再試', 'error');
                            });
                        }
                    });
                });
            });
        });
    </script>

}