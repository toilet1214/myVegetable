@model List<prjVegetable.Models.CCartWrap>
@using prjVegetable.Models
@{
    ViewData["Title"] = "Cart";
    var productListUrl = Url.Action("ProductList", "Product");
}
@inject DbVegetableContext dbContext
@section Styles {
    <link rel="stylesheet" href="~/css/Cart.css">
}
<div class="container my-5">
    <!-- 購物車清單標題 -->
    <div class="py-4 mb-4 mb-lg-10" style="background-color: #a3b899">
        <h1 class="h3 mb-0 text-center" style="font-size: 50px; position: relative;">
            購物車清單
        </h1>
    </div>

    <div class="row g-4 g-lg-10">
        <!-- 左邊商品列表 (col-lg-8) -->
        <div class="col-lg-8">
            <div class="border rounded-3 p-4" id="cart-container">
                @if (Model != null && Model.Any())
                {
                    foreach (var item in Model)
                    {
                        <div class="cart-product" data-product-id="@item.FProductId">
                            <div class="row align-items-center mb-4 cart-item">
                                <!-- 圖片區 + 商品名稱/價格 -->
                                <div class="col-auto" style="width:80px;">
                                    <img class="img-fluid d-block mx-auto"
                                         src="~/Images/@item.FName"
                                         alt="@item.FProductName"
                                         style="max-width:80px;" />
                                </div>
                                <div class="col-6">
                                    <h6 class="mb-1" style="font-size:20px;">@item.FProductName</h6>
                                    <span class="text-danger">單價: $@item.FPrice</span>
                                </div>
                                <!-- 數量調整 + 移除按鈕 放右邊 -->
                                <div class="col-4 text-end">
                                    <div class="d-flex justify-content-end align-items-center mb-2">
                                        <!-- 減少數量表單 (AJAX 攔截) -->
                                        <form method="post" style="display:inline;"
                                              asp-action="DecreaseQuantity" asp-controller="Cart" class="ajax-qty-form">
                                            <input type="hidden" name="productId" value="@item.FProductId" />
                                            <button class="btn btn-outline-secondary btn-sm" type="submit">-</button>
                                        </form>

                                        <span class="mx-2" id="qty-@item.FProductId">@item.FCount</span>

                                        <!-- 增加數量表單 (AJAX 攔截) -->
                                        <form method="post" style="display:inline;"
                                              asp-action="IncreaseQuantity" asp-controller="Cart" class="ajax-qty-form">
                                            <input type="hidden" name="productId" value="@item.FProductId" />
                                            <button class="btn btn-outline-secondary btn-sm" type="submit">+</button>
                                        </form>
                                    </div>
                                    <!-- 移除商品表單 (AJAX 攔截) -->
                                    <form method="post" asp-action="RemoveFromCart" asp-controller="Cart" style="display:inline;" class="ajax-remove-form">
                                        <input type="hidden" name="productId" value="@item.FProductId" />
                                        <button class="btn btn-link text-danger p-0" type="submit">移除</button>
                                    </form>
                                </div>
                            </div>
                            <hr />
                        </div>
                    }
                }
                else
                {
                    <p class="text-center">購物車目前沒有商品。 <a asp-action="ProductList" asp-controller="Product">前往購物</a></p>
                }
            </div>
        </div>

        <!-- 右邊會員資料與結帳資訊 (col-lg-4) -->
        <div class="col-lg-4">
            <div class="card border" style="background-color:#dde6d5">
                <div class="card-body">
                    <!-- 總金額（重複顯示） -->
                    <div class="d-flex align-items-center justify-content-between">
                        <h4 style="font-size:25px;">總金額</h4>
                        <h4 style="font-size:25px;" id="totalPrice2">$@ViewBag.TotalPrice</h4>
                    </div>
                    <hr class="mb-4">
                    <!-- 收貨人資料表單（結帳表單），正常提交 -->
                    <form method="post" asp-action="Checkout" asp-controller="CheckOut" id="checkoutForm">
                        <!-- 同會員資料 -->
                        <div class="mb-4">
                            <input type="checkbox" id="SameAsMember" class="large-checkbox" />
                            <label for="SameAsMember">同會員資料</label>
                        </div>
                        <!-- 收貨人姓名 -->
                        <div class="mb-4">
                            <label for="shippingName">收貨人姓名</label>
                            <input type="text" id="shippingName" name="shippingName" class="form-control" style="width:100%;" placeholder="收貨人姓名" data-placeholder="收貨人姓名" required />
                        </div>
                        <!-- 收貨人電話 -->
                        <div class="mb-4">
                            <label for="shippingPhone">收貨人電話</label>
                            <input type="text" id="shippingPhone" name="shippingPhone" class="form-control" style="width:100%;" placeholder="收貨人電話" data-placeholder="收貨人電話" required />
                        </div>
                        <!-- 收貨人地址 -->
                        <div class="mb-4">
                            <label for="shippingAddress">收貨人地址</label>
                            <textarea id="shippingAddress" name="shippingAddress" class="form-control" style="width:100%;" placeholder="收貨人地址" data-placeholder="收貨人地址" required></textarea>
                        </div>
                        <!-- 備註 -->
                        <div class="mb-4">
                            <label for="note">備註</label>
                            <textarea id="note" name="note" class="form-control" style="height:100px;width:100%;resize:none;text-align:left;" placeholder="備註" data-placeholder="備註">無</textarea>
                        </div>
                        <!-- 前往結帳按鈕，正常提交 -->
                        <button class="btn btn-primary w-100" type="submit">
                            前往結帳
                        </button>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>
@section Scripts {
    <script>
        var productListUrlJS = '@productListUrl';
        document.addEventListener("DOMContentLoaded", function () {
            // 1. 同會員資料功能（保留原有邏輯）
            var sameAsMemberCheckbox = document.getElementById('SameAsMember');
            if (sameAsMemberCheckbox) {
                sameAsMemberCheckbox.addEventListener('change', function () {
                    if (this.checked) {
                        fetch('/Cart/GetMemberInfo')
                            .then(response => response.json())
                            .then(data => {
                                if (data.success) {
                                    document.getElementById('shippingName').value = data.data.name || '';
                                    document.getElementById('shippingPhone').value = data.data.phone || '';
                                    document.getElementById('shippingAddress').value = data.data.address || '';
                                } else {
                                    Swal.fire({
                                        icon: "error",
                                        title: "Oops...",
                                        text: "載入會員資料失敗：" + data.message
                                    });
                                }
                            })
                            .catch(error => {
                                console.error('無法獲取會員資料:', error);
                                Swal.fire({
                                    icon: "error",
                                    title: "Oops...",
                                    text: "無法抓取會員資料，請稍後再試。"
                                });
                            });
                    } else {
                        document.getElementById('shippingName').value = '';
                        document.getElementById('shippingPhone').value = '';
                        document.getElementById('shippingAddress').value = '';
                        document.getElementById('note').value = '無';
                    }
                });
            } else {
                console.error("找不到 ID 為 'SameAsMember' 的 checkbox 元素");
            }

            // 2. 綁定數量更新表單的 AJAX 攔截 (針對帶有 ajax-qty-form 的表單)
            document.querySelectorAll("form.ajax-qty-form").forEach(function (form) {
                form.addEventListener("submit", function (event) {
                    event.preventDefault();
                    const formData = new FormData(this);
                    const productId = formData.get("productId");
                    const url = this.action;

                    // 若為減少數量操作且目前數量為 1，先進行 Swal.fire 確認
                    if (url.toLowerCase().includes("decreasequantity")) {
                        var qtyElement = document.getElementById("qty-" + productId);
                        var currentQty = qtyElement ? parseInt(qtyElement.innerText) : 0;
                        if (currentQty === 1) {
                            Swal.fire({
                                title: "目前此商品在購物車數量僅剩一，是否確定移除商品?",
                                icon: "warning",
                                showCancelButton: true,
                                confirmButtonColor: "#3085d6",
                                cancelButtonColor: "#d33",
                                confirmButtonText: "確認",
                                cancelButtonText: "取消"
                            }).then((result) => {
                                if (result.isConfirmed) {
                                    submitAjax(form, productId, url);
                                }
                            });
                            return;
                        }
                    }
                    // 其他情況直接送出 AJAX 請求
                    submitAjax(form, productId, url);
                });
            });

            // 3. 綁定移除商品表單的 AJAX 攔截 (針對帶有 ajax-remove-form 的表單)
            document.querySelectorAll("form.ajax-remove-form").forEach(function (form) {
                form.addEventListener("submit", function (event) {
                    event.preventDefault();
                    event.stopPropagation();
                    Swal.fire({
                        title: "是否要移除商品?",
                        icon: "warning",
                        showCancelButton: true,
                        confirmButtonColor: "#3085d6",
                        cancelButtonColor: "#d33",
                        confirmButtonText: "確認",
                        cancelButtonText: "取消"
                    }).then((result) => {
                        if (result.isConfirmed) {
                            const formData = new FormData(this);
                            const productId = formData.get("productId");
                            const url = this.action;
                            fetch(url, {
                                method: "POST",
                                body: formData
                            })
                                .then(response => response.json())
                                .then(data => {
                                    if (data.success) {
                                        // 移除整個商品容器 (.cart-product)
                                        const cartProductContainer = this.closest(".cart-product");
                                        if (cartProductContainer) {
                                            cartProductContainer.remove();
                                        }
                                        // 更新總金額 (兩處)
                                        const totalPriceElement = document.getElementById("totalPrice");
                                        if (totalPriceElement) {
                                            totalPriceElement.innerText = "$" + data.totalPrice;
                                        }
                                        const totalPrice2Element = document.getElementById("totalPrice2");
                                        if (totalPrice2Element) {
                                            totalPrice2Element.innerText = "$" + data.totalPrice;
                                        }
                                        // 如果所有商品都被移除，更新購物車區塊內容
                                        if (document.querySelectorAll(".cart-product").length === 0) {
                                            document.getElementById("cart-container").innerHTML =
                                                '<p class="text-center">購物車目前沒有商品。 <a href="' + productListUrlJS + '">前往購物</a></p>';
                                        }
                                        Swal.fire({
                                            title: "成功移除",
                                            icon: "success"
                                        });
                                    } else {
                                        Swal.fire({
                                            icon: "error",
                                            title: "Oops...",
                                            text: "刪除失敗：" + data.message
                                        });
                                    }
                                })
                                .catch(error => {
                                    console.error("刪除失敗:", error);
                                    Swal.fire({
                                        icon: "error",
                                        title: "Oops...",
                                        text: "刪除失敗：" + error
                                    });
                                });
                        }
                    });
                });
            });

            // 4. 輸入框 placeholder 處理
            document.querySelectorAll('.form-control').forEach(input => {
                input.addEventListener('focus', function () {
                    this.setAttribute('placeholder', ''); // 清除 placeholder
                });
                input.addEventListener('blur', function () {
                    if (!this.value) {
                        this.setAttribute('placeholder', this.getAttribute('data-placeholder')); // 恢復 placeholder
                    }
                });
            });
        });

        // 封裝 AJAX 請求函式
        function submitAjax(form, productId, url) {
            const formData = new FormData(form);
            fetch(url, {
                method: "POST",
                body: formData
            })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        // 更新該商品數量
                        const qtyElement = document.getElementById("qty-" + productId);
                        if (qtyElement) {
                            qtyElement.innerText = data.newCount;
                        }
                        // 更新總金額 (兩處)
                        const totalPriceElement = document.getElementById("totalPrice");
                        if (totalPriceElement) {
                            totalPriceElement.innerText = "$" + data.totalPrice;
                        }
                        const totalPrice2Element = document.getElementById("totalPrice2");
                        if (totalPrice2Element) {
                            totalPrice2Element.innerText = "$" + data.totalPrice;
                        }
                        // 若該商品數量變為 0，移除整個商品容器 (.cart-product)
                        if (data.newCount === 0) {
                            const cartProductContainer = form.closest(".cart-product");
                            if (cartProductContainer) {
                                cartProductContainer.remove();
                            }
                            // 若所有商品都移除，更新購物車容器顯示提示訊息
                            if (document.querySelectorAll(".cart-product").length === 0) {
                                document.getElementById("cart-container").innerHTML =
                                    '<p class="text-center">購物車目前沒有商品。 <a href="' + productListUrlJS + '">前往購物</a></p>';
                            }
                        }
                    } else {
                        Swal.fire({
                            icon: "error",
                            title: "Oops...",
                            text: "更新失敗：" + data.message
                        });
                    }
                })
                .catch(error => {
                    console.error("更新數量失敗:", error);
                    Swal.fire({
                        icon: "error",
                        title: "Oops...",
                        text: "更新數量失敗：" + error
                    });
                });
        }
    </script>
}