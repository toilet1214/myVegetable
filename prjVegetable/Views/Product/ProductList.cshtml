@model IEnumerable<prjVegetable.Models.CProductWrap>
@using X.PagedList.Mvc.Core;
@using X.PagedList;


@{
    ViewData["Title"] = "ProductList";

}




<style>

    .dropdown-menu {
        margin: 0 !important; 
        padding: 0 !important;
    }


    /* 篩選分類 */
    .imgicon {
        /* border-radius: 50%; */
        color: white;
        background-color: #8D8266;
        transition: all 0.3s;
    }
    .imgicon i {
        font-size: 2rem; 
    }
     .imgicon:hover {
        background-color: rgb(174, 146, 105);
    }


    .hidden-launch-date {
        display: none; /* 隱藏元素 */
    }



    /* 篩選價格 */
    #dropdownMenuButton1 {
        white-space: nowrap;
        padding: 10px 10px;
        font-size: 16px;
        width: auto;
    }

    #collapseExample {
        position: absolute;
        top: 42px;
        right: 0px;
        z-index: 1050;
        width: 300px;
    }

    #collapseExample .modal-body {
        padding: 5px 5px;
        margin: 10px;
    }

    .lightbox-close {
        color: black;
        text-shadow: 1px 1px 1px #333;
        font-size: 30px;
        position: absolute;
        top: 1px;
        right: 0px;
        margin: 10px;
        cursor: pointer;
    }
    .range_container {
        display: flex;
        flex-direction: column;
        width: 80%;
        margin-top: 30px;
    }

    .sliders_control {
        position: relative;
        min-height: 30px;
    }

    .form_control {
        position: relative;
        display: flex;
        justify-content: space-between;
        font-size: 24px;
        color: #635a5a;
    }

    input[type=range]::-webkit-slider-thumb {
        -webkit-appearance: none;
        pointer-events: all;
        width: 24px;
        height: 24px;
        background-color: #fff;
        border-radius: 50%;
        box-shadow: 0 0 0 1px #C6C6C6;
        cursor: pointer;
    }

    input[type=range]::-moz-range-thumb {
        -webkit-appearance: none;
        pointer-events: all;
        width: 24px;
        height: 24px;
        background-color: #fff;
        border-radius: 50%;
        box-shadow: 0 0 0 1px #C6C6C6;
        cursor: pointer;
    }

    input[type=range]::-webkit-slider-thumb:hover {
        background: #f7f7f7;
    }

    input[type=range]::-webkit-slider-thumb:active {
        box-shadow: inset 0 0 3px #387bbe, 0 0 9px #387bbe;
        -webkit-box-shadow: inset 0 0 3px #387bbe, 0 0 9px #387bbe;
    }

    input[type="number"] {
        color: #8a8383;
        width: 70px;
        height: 30px;
        font-size: 20px;
        border: none;
    }

    input[type=number]::-webkit-inner-spin-button,
    input[type=number]::-webkit-outer-spin-button {
        opacity: 1;
    }

    input[type="range"] {
        -webkit-appearance: none;
        appearance: none;
        height: 4px;
        width: 100%;
        position: absolute;
        background-color: #C6C6C6;
        pointer-events: none;
    }

    #fromSlider {
        height: 0;
        z-index: 1;
    }
</style>

@{
    int count = 0;
}

<!--產品分類 start -->
@using (Html.BeginForm("ProductList", "Product", FormMethod.Get))
{
    <input type="hidden" name="category" id="categoryInput" />
    <div class="bg-primary">
        <div class="container mt-2 fs-5 text-">
            <div class="row">
                <button class="imgicon col-12 col-md-2 d-flex align-items-center justify-content-center" style="border: none;" data-category="根莖" onclick="submitCategory(this)">
                    @* <img src="~/Images/icon玉米1.png" alt="" class="w-25 me-2" /> *@
                    <i class="fi fi-rr-carrot"></i>
                    <p class="mx-1 my-3" style="white-space: nowrap;">根莖</p>
                </button>
                <button class="imgicon col-12 col-md-2 d-flex align-items-center justify-content-center" style="border: none;" data-category="葉菜" onclick="submitCategory(this)">
                    @* <img src="~/Images/icon玉米1.png" alt="" class="w-25 me-2" /> *@
                    <i class="fi fi-rr-leafy-green"></i>
                    <p class="mx-1 my-3" style="white-space: nowrap;">葉菜</p>
                </button>
                <button class="imgicon col-12 col-md-2 d-flex align-items-center justify-content-center" style="border: none;" data-category="水果" onclick="submitCategory(this)">
                   @*  <img src="~/Images/icon玉米1.png" alt="" class="w-25 me-2" /> *@
                    <i class="fi fi-rr-apple-whole"></i>
                    <p class="mx-1 my-3" style="white-space: nowrap;">水果</p>
                </button>
                <button class="imgicon col-12 col-md-2 d-flex align-items-center justify-content-center" style="border: none;" data-category="蕈菇" onclick="submitCategory(this)">
                    @* <img src="~/Images/icon玉米1.png" alt="" class="w-25 me-2" /> *@
                    <i class="fi fi-rr-mushroom-alt"></i>
                    <p class="mx-1 my-3" style="white-space: nowrap;">蕈菇</p>
                </button>
                <button class="imgicon col-12 col-md-2 d-flex align-items-center justify-content-center" style="border: none;" data-category="蔬菜箱" onclick="submitCategory(this)">
                    @* <img src="~/Images/icon玉米1.png" alt="" class="w-25 me-2" /> *@
                    <i class="fi fi-rr-salad"></i>
                    <p class="mx-1 my-3" style="white-space: nowrap;">蔬菜箱</p>
                </button>
                <button class="imgicon col-12 col-md-2 d-flex align-items-center justify-content-center" style="border: none;" data-category="其他" onclick="submitCategory(this)">
                    @* <img src="~/Images/icon玉米1.png" alt="" class="w-25 me-2" /> *@
                    <i class="fi fi-rr-lettuce"></i>
                    <p class="mx-1 my-3" style="white-space: nowrap;">其他</p>
                </button>
            </div>
        </div>
    </div>
}




<div class="container d-flex flex-column">

    <div class="row">

        <!-- 搜尋 start -->
        @using (Html.BeginForm("ProductList", "Product", FormMethod.Get, new { id = "filterForm1" }))
        {
            @Html.TextBox("keyword", "")
            <button type="submit" class="btn btn-link" style="border: none;">
                <i class="bi bi-search"></i>
            </button>
        }

        <select id="sortOrder" class="form-select">
            <option value="price_asc">預設排序</option>
            <option value="price_asc">價格由小到大</option>
            <option value="price_desc">價格由大到小</option>
            <option value="publish_date_asc">上架日期由舊到新</option>
            <option value="publish_date_desc">上架日期由新到舊</option>
        </select>

        @using (Html.BeginForm("ProductList", "Product", FormMethod.Get, new { id = "filterForm2" }))
        {
            <!-- 篩選價格 start -->
            <input type="hidden" id="maxPriceInput" name="MaxPrice" />
            <div class="dropdown position-absolute top-1 end-0">
                <p>
                    <button class="btn btn-primary position-absolute top-0 end-0" type="button" id="dropdownMenuButton1" data-bs-toggle="collapse" data-bs-target="#collapseExample" aria-expanded="false" aria-controls="collapseExample">
                        篩選價格
                    </button>
                </p>
                <div class="collapse " id="collapseExample">
                    <div class="card card-body ">
                        <a class="dropdown-item " href="#"></a>
                        <span class="lightbox-close">&times;</span>
                        <div class="modal-body">
                            <p>建議區間: NT$100 ~ NT$500</p>
                            <div class="range_container">
                                <div class="sliders_control">
                                    <input id="fromSlider" type="range" value="100" min="0" max="1000" step="10" />
                                    <input id="toSlider" type="range" value="500" min="0" max="1000" step="10" />
                                </div>
                                <div class="form_control">
                                    <div class="form_control_container">
                                        <div class="form_control_container__time">最低$$</div>
                                        <input class="form_control_container__time__input" type="number" id="fromInput" value="100" min="0" max="1000" step="10" />
                                    </div>
                                    <div class="form_control_container">
                                        <div class="form_control_container__time">最高$$</div>
                                        <input class="form_control_container__time__input" type="number" id="toInput" value="500" min="0" max="1000" step="10" />
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="d-flex justify-content-end ">
                            <button id="applyFilter" class="btn btn-secondary btn-sm me-3 ms-3 ">確定</button>
                        </div>
                    </div>
                </div>
            </div>
        }

        <!-- 麵包屑 start -->
        <nav style="--bs-breadcrumb-divider: '>';" aria-label="breadcrumb">
            <ol class="breadcrumb">
                <li class="breadcrumb-item">
                    <a href="@Url.Action("Index", "Home")">首頁</a>
                </li>
                <li class="breadcrumb-item active" aria-current="page">
                    <a href="@Url.Action("ProductList", "Product")">產品列表</a>
                </li>
                @if (ViewBag.Category != null && ViewBag.Category != "產品列表")
                {
                    <li class="breadcrumb-item active" aria-current="page">
                        <a>@ViewBag.Category</a>
                    </li>
                }
            </ol>
        </nav>
    </div>


    <!-- 產品列表 start -->
    <div class="col-12" id="card">

        <div class="row row-cols-1 row-cols-md-5  my-4 mx-5 " id="product-list">


            @foreach (var item in Model)
            {
                count++;
                <div class="col product-item mb-4" data-publish-date="@item.FLaunchAt">
                    <a href="@Url.Action("ProductItem", "Product", new { id = item.FId })" class="text-decoration-none">

                        <div class="card h-100 shadow-sm d-flex flex-column ">
                            <div class="position-absolute bg-warning text-danger fw-bold p-3 start-0 top-0">人氣1</div>
                            @* ~/Img/@Html.DisplayFor(modelItem => item.FImgName) *@
                            <img src="~/Images/@Html.DisplayFor(modelItem => item.FImgName)" class="card-img-top img-fluid" alt="Image">
                            <div class="card-body d-flex flex-column justify-content-center align-items-center">
                                <h5 class="card-title">@Html.DisplayFor(modelItem => item.FName)</h5>
                                <p class="card-text">【@Html.DisplayFor(modelItem => item.FDescription)】</p>
                                <p class="card-text">NT @Html.DisplayFor(modelItem => item.FPrice)</p>
                                <p class="card-text"><span class="hidden-launch-date">@Html.DisplayFor(modelItem => item.FLaunchAt)</span></p>
                            </div>
                            <div class="card-footer bg-transparent border-primary">
                                <button class="btn heartButton" data-productid="@item.FId">
                                    <i class="heart-icon @((item.IsFavorite) ? "bi-heart-fill text-danger" : "bi-heart")"></i>
                                </button>
                                <button class="btn addToCartButtonList" data-productid="@item.FId">
                                    <i class="bi bi-cart"></i>加入購物車
                                </button>
                            </div>
                        </div>
                    </a>
                </div>
            }



        </div>



        
            <div class="container my-5">
                <div id="carouselExample" class="carousel slide" data-bs-ride="carousel">
                    <div class="carousel-inner">
                        <!-- 第一組卡片，這一組顯示三張卡片 -->
                        <div class="carousel-item active">
                            <div class="row">
                                <div class="col-4">
                                    <div class="card">
                                        <img src="~/Images/04.jpg" class="card-img-top" alt="Card 1">
                                        <div class="card-body">
                                            <h5 class="card-title">Card Title 1</h5>
                                            <p class="card-text">Description for card 1.</p>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-4">
                                    <div class="card">
                                    <img src="~/Images/02.jpg" class="card-img-top" alt="Card 2">
                                        <div class="card-body">
                                            <h5 class="card-title">Card Title 2</h5>
                                            <p class="card-text">Description for card 2.</p>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-4">
                                    <div class="card">
                                    <img src="~/Images/06.jpg" class="card-img-top" alt="Card 3">
                                        <div class="card-body">
                                            <h5 class="card-title">Card Title 3</h5>
                                            <p class="card-text">Description for card 3.</p>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <!-- 第二組卡片 -->
                        <div class="carousel-item">
                            <div class="row">
                                <div class="col-4">
                                    <div class="card">
                                    <img src="~/Images/01.jpg" class="card-img-top" alt="Card 4">
                                        <div class="card-body">
                                            <h5 class="card-title">Card Title 4</h5>
                                            <p class="card-text">Description for card 4.</p>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-4">
                                    <div class="card">
                                    <img src="~/Images/04.jpg" class="card-img-top" alt="Card 5">
                                        <div class="card-body">
                                            <h5 class="card-title">Card Title 5</h5>
                                            <p class="card-text">Description for card 5.</p>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-4">
                                    <div class="card">
                                    <img src="~/Images/07.jpg" class="card-img-top" alt="Card 6">
                                        <div class="card-body">
                                            <h5 class="card-title">Card Title 6</h5>
                                            <p class="card-text">Description for card 6.</p>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <!-- 左右導航箭頭 -->
                    <button class="carousel-control-prev" type="button" data-bs-target="#carouselExample" data-bs-slide="prev">
                        <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                        <span class="visually-hidden">Previous</span>
                    </button>
                    <button class="carousel-control-next" type="button" data-bs-target="#carouselExample" data-bs-slide="next">
                        <span class="carousel-control-next-icon" aria-hidden="true"></span>
                        <span class="visually-hidden">Next</span>
                    </button>
                </div>
            </div>

        <!-- 分頁控制 -->
        <div class="d-flex justify-content-center">
            @if ((int)ViewData["TotalPages"] > 1)
            {
                <div class="container my-auto">
                    <div class="d-flex align-items-end justify-content-center mt-3">
                        <nav aria-label="Page navigation example">
                            <ul class="pagination justify-content-center" id="pagination">
                                <!-- 上一頁 -->
                                <li class="page-item @(Convert.ToInt32(ViewData["Page"]) != 1 ? "" : "disabled")">
                                    <a class="page-link" href="@Url.Action("ProductList", new { category = ViewData["Category"], keyword = ViewData["Keyword"], page = Math.Max(1, Convert.ToInt32(ViewData["Page"]) - 1), MinPrice = ViewData["MinPrice"], MaxPrice = ViewData["MaxPrice"] })" aria-label="Previous">
                                        <span aria-hidden="true">&laquo;</span>
                                    </a>
                                </li>

                                <!-- 分頁頁碼 -->
                                @for (int i = 1; i <= (int)ViewData["TotalPages"]; i++)
                                {
                                    <li class="page-item @(i == Convert.ToInt32(ViewData["Page"]) ? "active" : "")">
                                        <a class="page-link" href="@Url.Action("ProductList", new { category = ViewData["Category"], keyword = ViewData["Keyword"], page = i, MinPrice = ViewData["MinPrice"], MaxPrice = ViewData["MaxPrice"] })">@i</a>
                                    </li>
                                }

                                <!-- 下一頁 -->
                                <li class="page-item @(Convert.ToInt32(ViewData["Page"]) != Convert.ToInt32(ViewData["TotalPages"]) ? "" : "disabled")">
                                    <a class="page-link" href="@Url.Action("ProductList", new { category = ViewData["Category"], keyword = ViewData["Keyword"], page = Math.Min(Convert.ToInt32(ViewData["TotalPages"]), Convert.ToInt32(ViewData["Page"]) + 1), MinPrice = ViewData["MinPrice"], MaxPrice = ViewData["MaxPrice"] })" aria-label="Next">
                                        <span aria-hidden="true">&raquo;</span>
                                    </a>
                                </li>
                            </ul>
                        </nav>
                    </div>
                </div>
            }
        </div>

        
    </div>








    @section Scripts
{

    <script>
        const products1 = @Html.Raw(Json.Serialize(ViewBag.Products));

        $(function () {

            // 篩選種類start //
            function submitCategory(button) {
                // 獲取按鈕的 data-category 屬性值
                var category = button.getAttribute('data-category') || "所有產品"; // 預設值

                // 將選中的 category 設置到隱藏輸入框
                var categoryInput = document.getElementById('categoryInput');
                if (categoryInput) {
                    categoryInput.value = category;
                } else {
                    console.error('隱藏輸入框 categoryInput 不存在！');
                    return;
                }

                // 提交表單
                var form = document.querySelector("form");
                if (form) {
                    form.submit();
                } else {
                    console.error('表單不存在！');
                }
            }

            // 停止按鈕的默認提交行為，並用 JavaScript 提交
            $('.imgicon').on('click', function (event) {
                event.preventDefault();  // 阻止表單提交
                submitCategory(this);  // 呼叫 submitCategory
            });




            // collapse隱藏/顯示
            let isVisible = false;
            $('#dropdownMenuButton1, .lightbox-close').on('click', function () {
                if (this.id === 'dropdownMenuButton1') {
                    if (isVisible) {
                        $('#collapseExample').hide();
                    } else {
                        $('#collapseExample').show();
                    }
                    isVisible = !isVisible;
                } else if (this.classList.contains('lightbox-close')) {
                    $('#collapseExample').fadeOut();
                    isVisible = false;
                }
            });


            // 篩選價格Slider Range start//
            function controlFromInput(fromSlider, fromInput, toInput, controlSlider) {
                const [from, to] = getParsed(fromInput, toInput);
                fillSlider(fromInput, toInput, '#C6C6C6', '#25daa5', controlSlider);
                if (from > to) {
                    fromSlider.value = to;
                    fromInput.value = to;
                } else {
                    fromSlider.value = from;
                }
            }

            function controlToInput(toSlider, fromInput, toInput, controlSlider) {
                const [from, to] = getParsed(fromInput, toInput);
                fillSlider(fromInput, toInput, '#C6C6C6', '#25daa5', controlSlider);
                setToggleAccessible(toInput);
                if (from <= to) {
                    toSlider.value = to;
                    toInput.value = to;
                } else {
                    toInput.value = from;
                }
            }

            function controlFromSlider(fromSlider, toSlider, fromInput) {
                const [from, to] = getParsed(fromSlider, toSlider);
                fillSlider(fromSlider, toSlider, '#C6C6C6', '#25daa5', toSlider);
                if (from > to) {
                    fromSlider.value = to;
                    fromInput.value = to;
                } else {
                    fromInput.value = from;
                }
            }

            function controlToSlider(fromSlider, toSlider, toInput) {
                const [from, to] = getParsed(fromSlider, toSlider);
                fillSlider(fromSlider, toSlider, '#C6C6C6', '#25daa5', toSlider);
                setToggleAccessible(toSlider);
                if (from <= to) {
                    toSlider.value = to;
                    toInput.value = to;
                } else {
                    toInput.value = from;
                    toSlider.value = from;
                }
            }

            function getParsed(currentFrom, currentTo) {
                const from = parseInt(currentFrom.value, 10);
                const to = parseInt(currentTo.value, 10);
                return [from, to];
            }

            function fillSlider(from, to, sliderColor, rangeColor, controlSlider) {
                const rangeDistance = to.max - to.min;
                const fromPosition = from.value - to.min;
                const toPosition = to.value - to.min;
                controlSlider.style.background = `linear-gradient(
                                             to right,
                                             ${sliderColor} 0%,
                                             ${sliderColor} ${(fromPosition) / (rangeDistance) * 100}%,
                                             ${rangeColor} ${((fromPosition) / (rangeDistance)) * 100}%,
                                             ${rangeColor} ${(toPosition) / (rangeDistance) * 100}%,
                                             ${sliderColor} ${(toPosition) / (rangeDistance) * 100}%,
                                             ${sliderColor} 100%)`;
            }

            function setToggleAccessible(currentTarget) {
                const toSlider = document.querySelector('#toSlider');
                if (Number(currentTarget.value) <= 0) {
                    toSlider.style.zIndex = 2;
                } else {
                    toSlider.style.zIndex = 0;
                }
            }

            const fromSlider = document.querySelector('#fromSlider');
            const toSlider = document.querySelector('#toSlider');
            const fromInput = document.querySelector('#fromInput');
            const toInput = document.querySelector('#toInput');
            fillSlider(fromSlider, toSlider, '#C6C6C6', '#25daa5', toSlider);
            setToggleAccessible(toSlider);

            fromSlider.oninput = () => controlFromSlider(fromSlider, toSlider, fromInput);
            toSlider.oninput = () => controlToSlider(fromSlider, toSlider, toInput);
            fromInput.oninput = () => controlFromInput(fromSlider, fromInput, toInput, toSlider);
            toInput.oninput = () => controlToInput(toSlider, fromInput, toInput, toSlider);
            // 篩選價格Slider Range end //



            //挑選最大最小值
            // 點擊 "確定" 按鈕時觸發篩選
            $('#applyFilter').on('click', function () {
                const minPrice = parseInt(fromSlider.value);
                const maxPrice = parseInt(toSlider.value);

                // 假設你有一個表單來提交數據
                $('#minPriceInput').val(minPrice);
                $('#maxPriceInput').val(maxPrice);

                // 提交表單
                $('#filterForm').submit();
            });



            //我的最愛
            $(".heartButton").click(function (event) {
                event.stopPropagation();

                var heartIcon = $(this).find(".heart-icon");
                var productId = $(this).data("productid");
                var isFavorite = heartIcon.hasClass("bi-heart-fill");
                var currentUrl = window.location.href;  // 獲取當前頁面的 URL

                // 檢查是否已登入
                $.ajax({
                    url: '@Url.Action("CheckLogin", "Product")',  // 檢查登入狀態的 API
                    type: 'GET',
                    success: function (response) {
                        if (!response.isLoggedIn) {
                            // 如果未登入，顯示登入 modal 並傳遞當前頁面 URL
                            $('#LoginModal').modal('show');
                            $("#LoginModal").on('shown.bs.modal', function () {
                                $('input[name="returnUrl"]').val(currentUrl);  // 將當前頁面 URL 填入 returnUrl 欄位
                            });
                        } else {
                            // 如果已登入，執行收藏的操作
                            $.ajax({
                                url: '@Url.Action("AddToFavorites", "Product")',  // 呼叫後端處理加入或取消收藏
                                type: 'POST',
                                data: { productId: productId, isFavorite: !isFavorite },
                                success: function (response) {
                                    console.log(response);

                                    if (response.success) {
                                        if (response.isFavorite) {
                                            heartIcon.removeClass("bi-heart").addClass("bi-heart-fill text-danger");
                                        } else {
                                            heartIcon.removeClass("bi-heart-fill text-danger").addClass("bi-heart");
                                        }
                                    } else {
                                        alert('操作失敗');
                                    }
                                },
                                error: function () {
                                    alert('出現錯誤');
                                }
                            });
                        }
                    },
                    error: function () {
                        alert('檢查登入狀態時出現錯誤');
                    }
                });

                event.preventDefault();
            });


            //加入購物車
            $(".addToCartButtonList").click(function (event) {
                event.stopPropagation();

                var button = $(this);
                var productId = button.data("productid");
                var currentUrl = window.location.href;

                $.ajax({
                    url: '@Url.Action("CheckLogin", "Product")',
                    type: 'GET',
                    success: function (response) {
                        if (!response.isLoggedIn) {
                            $('#LoginModal').modal('show');
                            $("#LoginModal").on('shown.bs.modal', function () {
                                $('input[name="returnUrl"]').val(currentUrl);
                            });
                        } else {

                            // 執行加入購物車的操作
                            $.ajax({
                                url: '@Url.Action("AddToCart", "Product")',
                                type: 'POST',
                                data: { productId: productId },
                                success: function (response) {
                                    if (response.success) {
                                        alert("成功加入購物車");
                                    } else {
                                        alert('操作失敗');
                                    }
                                },
                                error: function () {
                                    alert('出現錯誤');
                                }
                            });
                        }
                    },
                    error: function () {
                        alert('檢查登入狀態時出現錯誤');
                    }
                });
                event.preventDefault();
            });


            //排序
            function updateLocation(event){
                const selectValue = event.currentTarget.value; 
                    widnow.location.href=`?order_by=${selectValue}`;
            }

            document.addEventListener("DOMContentLoaded", function () {
                const selectElement = document.getElementById("sortOrder");

                if (selectElement) { // 檢查元素是否存在
                    const urlParams = new URLSearchParams(window.location.search);
                    const orderBy = urlParams.get("order_by");

                    if (orderBy) {
                        // 如果 URL 中有 order_by 參數，選擇對應的排序方式
                        selectElement.value = orderBy;
                        // 根據 URL 中的 order_by 參數來排序資料
                        const sortedProducts = sortProducts([...products1], orderBy);
                        updateTable(sortedProducts); // 更新表格
                    } else {
                        // 如果 URL 中沒有 order_by 參數，顯示原始資料
                        renderTable(products1); // 顯示原始資料
                    }

                    selectElement.addEventListener("change", function () {
                        const selectOrder = this.value; // 獲取選擇的排序方式
                        console.log("選擇的排序方式:", selectOrder); // 顯示選擇的排序方式，便於檢查
                        // 根據選擇的排序方式排序資料
                        const sortedProducts = sortProducts([...products1], selectOrder);
                        updateTable(sortedProducts); // 更新表格

                        // 更新 URL 查詢參數，這樣可以反映當前排序狀態
                        const newUrl = new URL(window.location.href);
                        newUrl.searchParams.set("order_by", selectOrder); // 修改 order_by 參數
                        window.history.pushState({}, "", newUrl); // 更新 URL，不刷新頁面
                    });
                } else {
                    console.error("排序選擇框 (sortOrder) 元素未找到");
                }
            });

                function sortProducts(products, orderBy) {
                if (orderBy === "price_asc") {
                    return products.sort((a, b) => a.FPrice - b.FPrice);
                } else if (orderBy === "price_desc") {
                    return products.sort((a, b) => b.FPrice - a.FPrice);
                } else if (orderBy === "publish_date_asc") {
                    return products.sort((a, b) => new Date(a.FLaunchAt) - new Date(b.FLaunchAt));
                } else if (orderBy === "publish_date_desc") {
                    return products.sort((a, b) => new Date(b.FLaunchAt) - new Date(a.FLaunchAt));
                } else {
                    return products; // 預設返回原始資料
                }
            }

            // 更新 DOM 顯示排序後的商品列表
            function updateTable(sortedProducts) {
                const productList = document.getElementById("product-list");
                productList.innerHTML = ""; // 清空原有的列表

                sortedProducts.forEach(item => {
                    const productElement = createProductElement(item);
                    productList.appendChild(productElement);
                });
            }

            // 根據商品資料創建對應的 HTML 元素
            function createProductElement(item) {
                const productElement = document.createElement("div");
                productElement.classList.add("col", "product-item", "mb-4");
                productElement.dataset.publishDate = item.FLaunchAt;
                productElement.dataset.price = item.FPrice;

                productElement.innerHTML = `
                    <a href="/Product/ProductItem/${item.FId}" class="text-decoration-none">
                        <div class="card h-100 shadow-sm d-flex flex-column">
                            <div class="position-absolute bg-warning text-danger fw-bold p-3 start-0 top-0">人氣1</div>
                            <img src="~/Images/${item.FImgName}" class="card-img-top img-fluid" alt="Image">
                            <div class="card-body d-flex flex-column justify-content-center align-items-center">
                                <h5 class="card-title">${item.FName}</h5>
                                <p class="card-text">【${item.FDescription}】</p>
                                <p class="card-text">NT ${item.FPrice}</p>
                                <p class="card-text"><span class="hidden-launch-date">${item.FLaunchAt}</span></p>
                            </div>
                            <div class="card-footer bg-transparent border-primary">
                                <button class="btn heartButton" data-productid="${item.FId}">
                                    <i class="heart-icon ${item.IsFavorite ? "bi-heart-fill text-danger" : "bi-heart"}"></i>
                                </button>
                                <button class="btn addToCartButtonList" data-productid="${item.FId}">
                                    <i class="bi bi-cart"></i>加入購物車
                                </button>
                            </div>
                        </div>
                    </a>
                `;
                return productElement;
            }

            const selectElement = document.getElementById("sortOrder");

            if (selectElement) {
                selectElement.addEventListener("change", function () {
                    // 排序邏輯
                });
            } else {
                console.error('沒有找到 sortOrder 元素');
            }

            


            




        });//end function

    </script>
    }