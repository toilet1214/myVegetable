@model prjVegetable.ViewModels.CGoodsInAndOutViewModel

@{
    ViewData["Title"] = "Edit";
    Layout = "~/Views/Shared/_LayoutERP.cshtml";
}

<h1>編輯進出貨資料</h1>
<hr />

<!-- 主表單 -->
<form asp-action="Edit" method="post" id="EditForm">
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
    <div class="container">
        <h3>進出貨基本資料</h3>
        <input type="hidden" asp-for="GoodsInAndOut.FId" />
        <div class="row mb-3">
            <div class="col-6">
                <div class="form-group">
                    <label asp-for="GoodsInAndOut.FInOut" class="control-label">進貨/出貨/廢棄</label>
                    <select asp-for="GoodsInAndOut.FInOut" class="form-control" required>
                        <option value="0" >進貨</option>
                        <option value="1" >出貨</option>
                        <option value="2" >廢棄單</option>
                    </select>
                    <span asp-validation-for="GoodsInAndOut.FInOut" class="text-danger"></span>
                </div>
            </div>
            <div class="col-6">
                <div class="form-group">
                    <label asp-for="GoodsInAndOut.FDate" class="control-label">日期</label>
                    <input asp-for="GoodsInAndOut.FDate" class="form-control" type="date" required />
                    <span asp-validation-for="GoodsInAndOut.FDate" class="text-danger"></span>
                </div>
            </div>
        </div>
        <div class="row mb-3">
            <div class="col-6">
                <div class="form-group">
                    <label asp-for="GoodsInAndOut.FInvoiceId" class="control-label">發票 ID</label>
                    <input asp-for="GoodsInAndOut.FInvoiceId" class="form-control" required />
                    <span asp-validation-for="GoodsInAndOut.FInvoiceId" class="text-danger"></span>
                </div>
            </div>
            <div class="col-6">
                <div class="form-group">
                    <label asp-for="GoodsInAndOut.FProviderId" class="control-label">供應商 ID</label>
                    <input asp-for="GoodsInAndOut.FProviderId" class="form-control" required />
                    <span asp-validation-for="GoodsInAndOut.FProviderId" class="text-danger"></span>
                </div>
            </div>
        </div>
        <div class="row mb-3">
            <div class="col-6">
                <div class="form-group">
                    <label asp-for="GoodsInAndOut.FPersonId" class="control-label">客戶 ID</label>
                    <input asp-for="GoodsInAndOut.FPersonId" class="form-control" required />
                    <span asp-validation-for="GoodsInAndOut.FPersonId" class="text-danger"></span>
                </div>
            </div>
            <div class="col-6">
                <div class="form-group">
                    <label asp-for="GoodsInAndOut.FTotal" class="control-label">進出貨總價</label>
                    <input asp-for="GoodsInAndOut.FTotal" id="GoodsInAndOut_FTotal" class="form-control" required readonly />
                    <span asp-validation-for="GoodsInAndOut.FTotal" class="text-danger"></span>
                </div>
            </div>
        </div>
        <div class="row mb-3">
            <div class="col-6">
                <div class="form-group">
                    <label asp-for="GoodsInAndOut.FNote" class="control-label">備註</label>
                    <input asp-for="GoodsInAndOut.FNote" class="form-control" type="text" required />
                    <span asp-validation-for="GoodsInAndOut.FNote" class="text-danger"></span>
                </div>
            </div>
            <div class="col-6">
                <div class="form-group">
                    <label asp-for="GoodsInAndOut.FEditor" class="control-label">編輯人</label>
                    <input asp-for="GoodsInAndOut.FEditor" id="GoodsInAndOut_FEditor" class="form-control" readonly value="" />
                    <span asp-validation-for="GoodsInAndOut.FEditor" class="text-danger"></span>
                </div>
            </div>
        </div>
        <hr />
        <h3>進出貨明細</h3>
        <div id="details">
            @for (int i = 0; i < Model.GoodsInAndOutDetails.Count; i++)
            {
                <div class="row mb-3 detail-entry">
                    <input type="hidden" asp-for="GoodsInAndOutDetails[i].FId" />
                    <div class="col-3">
                        <select class="FProductId form-control" required>
                            <option value="">請選擇產品</option>
                            @foreach (var product in (List<dynamic>)ViewBag.ProductList)
                            {
                                if (Model.GoodsInAndOutDetails[i].FProductId.ToString() == product.FId.ToString())
                                {
                                    <option value="@product.FId" selected>@product.FName</option>
                                }
                                else
                                {
                                    <option value="@product.FId">@product.FName</option>
                                }
                            }
                        </select>
                    </div>
                    <div class="col-2">
                        <input asp-for="GoodsInAndOutDetails[i].FCount" class="FCount form-control" placeholder="數量" type="number" min="1" required />
                    </div>
                    <div class="col-2">
                        <input asp-for="GoodsInAndOutDetails[i].FPrice" class="FPrice form-control" placeholder="單價" readonly />
                    </div>
                    <div class="col-2">
                        <input asp-for="GoodsInAndOutDetails[i].FSum" class="FSum form-control" placeholder="小計" readonly />
                    </div>
                    <!-- 每筆明細獨立移除按鈕 -->
                    <div class="col-3">
                        <button type="button" class="btn btn-danger btn-remove-detail">移除</button>
                    </div>
                </div>
            }
        </div>
        <!-- 全局新增/刪除按鈕（可選） -->
        <div class="row mb-3">
            <div class="col-6">
                <button type="button" id="addDetail" class="btn btn-success">＋ 新增明細</button>
            </div>
            <div class="col-6 text-end">
                <button type="button" id="removeDetail" class="btn btn-danger">－ 移除最後一筆</button>
            </div>
        </div>
        <!-- 返回與儲存按鈕 -->
        <div class="row mb-3">
            <div class="col-6 text-start">
                <button type="button" id="cancelEdit" class="btn btn-outline-secondary">返回</button>
            </div>
            <div class="col-6 text-end">
                <button type="button" id="submitEditData" class="btn btn-primary">儲存</button>
            </div>
        </div>
    </div>
</form>

<script>
    // 全域變數，用來存放從 API 取得的產品資訊
    let productsData = [];

    // 頁面載入時，取得會員資訊並填入 FEditor，以及取得產品資訊
    document.addEventListener("DOMContentLoaded", function () {
        // 取得會員資訊（透過 CDictionary.SK_LOGINED_USER_ID 存於 Session）
        fetch('/GoodsInAndOut/GetMemberInfo')
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    document.getElementById("GoodsInAndOut_FEditor").value = data.data.ID;
                } else {
                    console.error("無法獲取會員資訊: " + data.message);
                }
            })
            .catch(error => console.error("錯誤: ", error));

        // 取得產品資訊
        fetch('/GoodsInAndOut/GetProductsInfo')
            .then(response => response.json())
            .then(data => {
                console.log("GetProductsInfo 回傳資料：", JSON.stringify(data, null, 2));
                if (data.success) {
                    productsData = data.products;
                    // 為每個 detail-entry 的產品下拉選單重新載入選項
                    document.querySelectorAll(".FProductId").forEach(function (selectElem) {
                        loadProductOptionsFor(selectElem);
                    });
                } else {
                    console.error("無法獲取產品資訊：" + data.message);
                }
            })
            .catch(error => console.error("錯誤: ", error));
    });

    // 載入產品選單資料
    function loadProductOptionsFor(selectElem) {
        selectElem.innerHTML = '<option value="">請選擇產品</option>';
        if (productsData.length === 0) {
            console.warn("productsData 為空！");
        }
        productsData.forEach(product => {
            let option = document.createElement("option");
            option.value = product.FId; // 注意：此處依據後端傳回的屬性名稱，使用大寫 FId
            option.textContent = product.FName;
            // 若 select 的當前 value 與該產品 FId 相符則設為 selected
            if (selectElem.value == product.FId.toString()) {
                option.selected = true;
            }
            selectElem.appendChild(option);
        });
    }

    // 當產品下拉選單變更時，自動填入單價並更新小計與總價
    document.addEventListener("change", function (event) {
        if (event.target.classList.contains("FProductId")) {
            let productId = event.target.value;
            console.log("選擇的產品 ID:", productId);
            let detailRow = event.target.closest(".detail-entry");
            let priceInput = detailRow.querySelector(".FPrice");
            if (productId) {
                // 從全域變數中找出對應產品（比對字串）
                let product = productsData.find(p => p.FId.toString() === productId);
                console.log("找到的產品：", product);
                if (product && product.FPrice != null) {
                    priceInput.value = product.FPrice;
                    let count = parseFloat(detailRow.querySelector(".FCount").value) || 0;
                    detailRow.querySelector(".FSum").value = (count * product.FPrice).toFixed(0);
                } else {
                    priceInput.value = "";
                    detailRow.querySelector(".FSum").value = "";
                    console.error("無法取得產品單價");
                }
            } else {
                priceInput.value = "";
                detailRow.querySelector(".FSum").value = "";
            }
            updateTotalPrice();
        }
    });

    // 當使用者輸入數量時，自動計算小計與更新總價
    document.addEventListener("input", function (event) {
        if (event.target.classList.contains("FCount")) {
            let detailRow = event.target.closest(".detail-entry");
            let count = parseFloat(event.target.value) || 0;
            let price = parseFloat(detailRow.querySelector(".FPrice").value) || 0;
            detailRow.querySelector(".FSum").value = (price * count).toFixed(0);
            updateTotalPrice();
        }
    });

    // 更新進出貨總價（累計所有細項小計）
    function updateTotalPrice() {
        let total = 0;
        document.querySelectorAll(".FSum").forEach(function (sumElem) {
            let val = parseFloat(sumElem.value) || 0;
            total += val;
        });
        document.getElementById("GoodsInAndOut_FTotal").value = total;
    }

    // 新增明細列
    document.getElementById("addDetail").addEventListener("click", function () {
        var newRow = `<div class="row mb-3 detail-entry">
                    <input type="hidden" class="FGoodsInandOutId" value="0" />
                    <div class="col-3">
                        <select class="FProductId form-control" required>
                            <option value="">請選擇產品</option>
                        </select>
                    </div>
                    <div class="col-3">
                        <input type="number" class="FCount form-control" placeholder="數量" min="1" required />
                    </div>
                    <div class="col-3">
                        <input type="text" class="FPrice form-control" placeholder="單價" readonly />
                    </div>
                    <div class="col-2">
                        <input type="text" class="FSum form-control" placeholder="小計" readonly />
                    </div>
                    <div class="col-1">
                        <button type="button" class="btn btn-danger btn-remove-detail">移除</button>
                    </div>
                </div>`;
        document.getElementById("details").insertAdjacentHTML("beforeend", newRow);
        var newSelects = document.querySelectorAll(".FProductId");
        var lastSelect = newSelects[newSelects.length - 1];
        loadProductOptionsFor(lastSelect);
    });

    // 全局移除按鈕（如果有全局的移除按鈕）
    document.getElementById("removeDetail").addEventListener("click", function () {
        var details = document.querySelectorAll(".detail-entry");
        if (details.length > 1) {
            details[details.length - 1].remove();
            updateTotalPrice();
        } else {
            alert("至少需要一筆明細！");
        }
    });

    // 每筆明細內的獨立移除按鈕功能
    document.addEventListener("click", function (event) {
        if (event.target.classList.contains("btn-remove-detail")) {
            let detailRow = event.target.closest(".detail-entry");
            let details = document.querySelectorAll(".detail-entry");
            if (details.length > 1) {
                detailRow.remove();
                updateTotalPrice();
            } else {
                alert("至少需要一筆明細！");
            }
        }
    });

    // 提交更新資料按鈕
    document.getElementById("submitEditData").addEventListener("click", function () {
        let formData = new FormData(document.getElementById("EditForm"));
        fetch("/GoodsInAndOut/Edit", {
            method: "POST",
            body: formData
        }).then(response => response.json())
          .then(data => {
              if (data.success) {
                  alert("資料已更新！");
                  window.location.href = "/GoodsInAndOut/GoodsInAndOutIndex";
              } else {
                  alert("更新失敗：" + data.message);
              }
          }).catch(error => console.error("Error:", error));
    });

    // 取消按鈕，返回 GoodsInAndOutIndex
    document.getElementById("cancelEdit").addEventListener("click", function () {
        window.location.href = "/GoodsInAndOut/GoodsInAndOutIndex";
    });
</script>
