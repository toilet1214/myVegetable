@model prjVegetable.ViewModels.CInventoryViewModel
@{
    Layout = "~/Views/Shared/_LayoutERP.cshtml";
}
<!--

庫存盤點作業 Inventory/Detail

*查詢到的筆數沒有更新
*還沒有帶入使用者ID
*列印 沒有庫存盤點單號、基準日、建檔日期

-->
<div class="container my-5">
        <div class="row d-block mb-3">
            <div class="btn-group" role="group" aria-label="Basic example">
                <button type="button" id="searchButton" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#exampleModal">
                    查詢
                </button>

                <a href="@Url.Action("Detail", "Inventory", new { id = 1 })" class="btn btn-primary">
                    <i class="bi bi-skip-start-fill me-2"></i>第一筆
                </a>
                <a href="@Url.Action("Detail", "Inventory", new { id = ViewData["PreviousId"] })" class="btn btn-primary">
                    <i class="bi bi-caret-left-fill me-2"></i>上一筆
                </a>
                <a href="@Url.Action("Detail", "Inventory", new { id = ViewData["NextId"] })" class="btn btn-primary">
                    <i class="bi bi-caret-right-fill me-2"></i>下一筆
                </a>
                <a href="@Url.Action("Detail", "Inventory", new { id = ViewData["LastId"] })" class="btn btn-primary">
                    <i class="bi bi-skip-end-fill me-2"></i>最後一筆
                </a>
                <button type="button" id="addButton" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#addModal">
                    <i class="bi bi-file-earmark me-2"></i>新增
                </button>
                <button type="button" class="btn btn-primary" id="editButton" data-ignore-exit>
                    <i class="bi bi-pencil me-2"></i>編輯
                </button>
                <button type="button" class="btn btn-primary d-none" id="saveButton">
                    <i class="bi bi-floppy me-2"></i>儲存
                </button>
                <button type="button" class="btn btn-primary" id="deletebutton" disabled>
                    <i class="bi bi-trash me-2"></i>刪除
                </button>
                <button type="button" class="btn btn-primary me-2" id="printButton" onclick="printTable()">
                    <i class="bi bi-printer me-2"></i>列印
                </button>
            </div>
        </div>

        <!-- 工具列 end -->
        <hr />
        <div class="row">
            <div class="row">
                <div class="col-5">
                    <!-- 庫存盤點單號 -->
                    <div class="d-flex mb-0 align-items-center">
                        <label asp-for="InventoryMain.FId" class="pe-1 mb-3">庫存盤點單號</label>
                        <input asp-for="InventoryMain.FId" class="form-control form-control-sm w-auto mb-3 ms-auto" type="text" readonly />
                        <span asp-validation-for="InventoryMain.FId" class="text-danger"></span>
                    </div>
                    <!-- 盤點基準日 -->
                    <div class="d-flex mb-0 align-items-center">
                        <label asp-for="InventoryMain.FBaselineDate" class="pe-1 mb-3">盤點基準日</label>
                        <input asp-for="InventoryMain.FBaselineDate" class="form-control form-control-sm w-auto mb-3 ms-auto" type="date" id="FBaselineDate" value="@Model.InventoryMain.FBaselineDate.ToString("yyyy-MM-dd")" readonly />
                        <span asp-validation-for="InventoryMain.FBaselineDate" class="text-danger"></span>
                    </div>

                    <!-- 建檔日期 -->
                    <div class="d-flex align-items-center">
                        <label asp-for="InventoryMain.FCreatedAt" class="pe-1 mb-3">建檔日期</label>
                        <input asp-for="InventoryMain.FCreatedAt" class="form-control form-control-sm w-auto mb-3 ms-auto" type="date" id="FCreatedAt" value="@Model.InventoryMain.FCreatedAt.ToString("yyyy-MM-dd")" readonly />
                        <span asp-validation-for="InventoryMain.FCreatedAt" class="text-danger"></span>
                    </div>
                </div>
                <div class="col-7 d-flex">
                    <div id="inventoryNoteView" class="p-3 border border-primary rounded w-100">@Model.InventoryMain.FNote</div>
                    <textarea id="inventoryNoteEdit" class="form-control d-none w-100">@Model.InventoryMain.FNote</textarea>
                </div>
                <input type="hidden" name="currentId" value="@Model.InventoryMain.FId" />
                @foreach (var item in Model.InventoryDetails)
                {
                    <input type="hidden" name="FInventoryMainId" value="@item.FInventoryMainId" />
                }
            </div>
        </div>
        <hr />
        <div>
            <div class="d-flex justify-content-end">
                <button type="button" class="btn btn-primary me-2" id="syncStockButton" disabled>將系統庫存數量帶入實際庫存數量</button>
                <button type="button" class="btn btn-primary" id="resetStockButton" disabled>將實際庫存數量歸零</button>
            </div>
            <div class="table-responsive" style="max-height: 50%;">
                <table class="table text-center" id="printTable">
                    <thead>
                        <tr>
                            <th>商品Id</th>
                            <th>商品名稱</th>
                            <th>系統庫存數量</th>
                            <th>實際庫存數量(填入數量)</th>
                            <th>差異數量</th>
                        </tr>
                    </thead>
                    <tbody id="tableBody">
                        @foreach (var item in Model.InventoryDetails)
                        {
                            <tr>
                                <td>@Html.DisplayFor(modelItem => item.FProductId)</td>
                                <td>@Html.DisplayFor(modelItem => item.FName)</td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.FSystemQuantity)
                                </td>
                                <td>
                                    <input id="FActualQuantity_@item.FId" name="FActualQuantity" type="number" value="@item.FActualQuantity">
                                </td>
                                <td>
                                    @if (item.FActualQuantity.HasValue)
                                    {
                                        @(item.FActualQuantity.Value - item.FSystemQuantity)
                                    }
                                    else
                                    {
                                        @("")
                                    }
                                </td>
                                <input type="hidden" name="FInventoryMainId" value="@item.FInventoryMainId" />
                                <input type="hidden" name="FInventoryDetailId" value="@item.FId" />
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
        <hr />
        <div class="d-flex mb-3 align-items-center">
            <span class="ms-auto">共查詢到 @Model.TotalItemCount 筆，當前顯示第 @Model.CurrentItemCount 筆</span>
        </div>

</div>

<!-- 選擇條件來查詢 -->
<div class="modal fade" id="exampleModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">輸入盤點條件查詢</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <!-- 庫存盤點單號 -->
                <div class="d-flex mb-3 align-items-center">
                    <label asp-for="InventoryMain.FId" class="pe-1 mb-0" style="width: 150px;">庫存盤點單號</label>
                    <input asp-for="InventoryMain.FId" class="form-control form-control-sm w-auto" type="text" id="searchFId" value="" />
                    <span asp-validation-for="InventoryMain.FId" class="text-danger"></span>
                </div>

                <!-- 盤點基準日範圍 -->
                <div class="d-flex mb-3 align-items-center">
                    <label asp-for="InventoryMain.FBaselineDate" class="pe-1 mb-0" style="width: 150px;">盤點基準日範圍</label>
                    <input asp-for="InventoryMain.FBaselineStartDate" class="form-control form-control-sm w-auto" type="date" id="FBaselineStartDate" />
                    <span class="mx-2">至</span>
                    <input asp-for="InventoryMain.FBaselineEndDate" class="form-control form-control-sm w-auto" type="date" id="FBaselineEndDate" />
                    <span asp-validation-for="InventoryMain.FBaselineDate" class="text-danger"></span>
                </div>

                <!-- 建檔日期範圍 -->
                <div class="d-flex align-items-center">
                    <label asp-for="InventoryMain.FCreatedAt" class="pe-1 mb-0" style="width: 150px;">建檔日期範圍</label>
                    <input asp-for="InventoryMain.FCreatedStartDate" class="form-control form-control-sm w-auto" type="date" id="FCreatedStartDate" />
                    <span class="mx-2">至</span>
                    <input asp-for="InventoryMain.FCreatedEndDate" class="form-control form-control-sm w-auto" type="date" id="FCreatedEndDate" />
                    <span asp-validation-for="InventoryMain.FCreatedAt" class="text-danger"></span>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">取消</button>
                <button type="button" class="btn btn-primary" id="modalSearchButton">確定</button>
            </div>
        </div>
    </div>
</div>

<!-- 查詢結果視窗 -->
<div class="modal fade" id="inventoryListModal" tabindex="-1" role="dialog" aria-labelledby="inventoryListModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="inventoryListModalLabel">選擇盤點單號</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <table class="table table-bordered">
                    <thead>
                        <tr>
                            <th>盤點單號</th>
                            <th>盤點基準日</th>
                            <th>建檔日期</th>
                            <th>備註</th> <!-- 新增備註欄 -->
                        </tr>
                    </thead>
                    <tbody id="inventoryListTableBody">
                        <!-- 這裡會透過 JS 動態填入資料 -->
                    </tbody>
                </table>
            </div>
            <div id="searchResultCount" class="text-muted ms-3">
                <!-- 查詢結果的筆數會動態顯示在這裡 -->
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary" id="confirmSelection">確定</button>
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">取消</button>
            </div>
        </div>
    </div>
</div>



<!-- 選擇條件來新增 -->
<div class="modal fade" id="addModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">新增盤點條件</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="inventoryForm" method="post" action="@Url.Action("Create", "Inventory")">
                    <div class="form-group">
                        <label for="BaseDate">盤點基準日</label>
                        <input type="date" class="form-control" id="BaseDate" name="BaseDate" min="@DateTime.Now.ToString("yyyy-MM-dd")">
                    </div>

                    <div class="form-group">
                        <label for="ProductStartCode">商品編號區間 (起始)</label>
                        <select class="form-control" id="ProductStartCode" name="ProductStartCode">
                            @foreach (var product in Model.Products)
                            {
                                <option value="@product.FId">@product.FId - @product.FName</option>
                            }
                        </select>
                    </div>
                    <div class="form-group">
                        <label for="ProductEndCode">商品編號區間 (結束)</label>
                        <select class="form-control" id="ProductEndCode" name="ProductEndCode">
                            @foreach (var product in Model.Products)
                            {
                                <option value="@product.FId">@product.FId - @(string.IsNullOrEmpty(product.FName) ? "名稱未設定" : product.FName)</option>
                            }
                        </select>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">取消</button>
                <button type="submit" class="btn btn-primary" form="inventoryForm">確定</button>
            </div>
        </div>
    </div>
</div>

<script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>

<!-- 查詢 -->
<script>
    document.getElementById('modalSearchButton').addEventListener('click', function () {
        const fId = document.getElementById('searchFId').value.trim();
        const fBaselineStartDate = document.getElementById('FBaselineStartDate').value.trim();
        const fBaselineEndDate = document.getElementById('FBaselineEndDate').value.trim();
        const fCreatedStartDate = document.getElementById('FCreatedStartDate').value.trim();
        const fCreatedEndDate = document.getElementById('FCreatedEndDate').value.trim();

        const requestData = {
            fId: fId || null,
            fBaselineStartDate: fBaselineStartDate || null,
            fBaselineEndDate: fBaselineEndDate || null,
            fCreatedStartDate: fCreatedStartDate || null,
            fCreatedEndDate: fCreatedEndDate || null
        };

        if (!fId && !fBaselineStartDate && !fBaselineEndDate && !fCreatedStartDate && !fCreatedEndDate) {
            alert('請至少填寫一個查詢條件');
            return;
        }

        $.ajax({
            url: '/Inventory/Search',
            type: 'GET',
            data: requestData,
            success: function (response) {
                console.log("AJAX 成功回應！", response);

                if (response.success && response.inventoryMainList?.length > 0) {
                    const tableBody = document.getElementById('inventoryListTableBody');
                    tableBody.innerHTML = ''; // 清空表格

                    response.inventoryMainList.forEach(item => {
                        const row = `
                        <tr class="inventory-row" data-id="${item.fId}">
                            <td>${item.fId}</td>
                            <td>${item.fBaselineDate ?? ''}</td>
                            <td>${item.fCreatedAt ?? ''}</td>
                            <td>${item.fNote ?? ''}</td> <!-- 新增備註欄位 -->
                        </tr>
                        `;
                        tableBody.insertAdjacentHTML('beforeend', row);
                    });

                    // 更新結果筆數
                    document.getElementById('searchResultCount').textContent = `符合條件的筆數: ${response.totalCount}`;

                    // 顯示查詢結果視窗
                    $("#inventoryListModal").modal("show");
                } else {
                    console.error("沒有查到資料或資料格式錯誤", response);
                    alert(response.message || '查無符合條件的資料');
                }
            },
            error: function (error) {
                console.error("AJAX 失敗", error);
                alert('發生錯誤，請稍後再試');
            }
        });
    });

    // 選擇邏輯：點擊行選擇
    let selectedInventoryMainId = null; // 用來記錄選中的 ID

    document.getElementById('inventoryListTableBody').addEventListener('click', function (e) {
        const targetRow = e.target.closest('tr'); // 確保點擊的是行
        if (targetRow && targetRow.classList.contains('inventory-row')) {
            selectedInventoryMainId = targetRow.dataset.id; // 設定選中的 ID
            document.querySelectorAll('.inventory-row').forEach(row => {
                row.classList.remove('table-active'); // 移除其他行的高亮
            });
            targetRow.classList.add('table-active'); // 高亮當前行
            console.log("選中的 InventoryMainId:", selectedInventoryMainId);
        }
    });

    // 確認選擇後跳轉
    document.getElementById('confirmSelection').addEventListener('click', function () {
        if (!selectedInventoryMainId) {
            alert('請選擇一個盤點單號');
            return;
        }
        console.log("即將跳轉到:", `/Inventory/Detail/${selectedInventoryMainId}`);
        window.location.href = `/Inventory/Detail/${selectedInventoryMainId}`;
    });


</script>


<!-- 編輯/儲存 -->
<script>
    document.addEventListener("DOMContentLoaded", function () {
        // 初始設定：讓所有輸入框、按鈕、備註欄處於唯讀狀態
        setEditable(false);

        // 監聽「編輯」按鈕
        document.getElementById("editButton").addEventListener("click", function () {
            isEditing = true;
            setEditable(true);

            // 切換按鈕顯示
            this.classList.add("d-none"); // 隱藏修改按鈕
            document.getElementById("saveButton").classList.remove("d-none"); // 顯示儲存按鈕
        });

        // 監聽「儲存」按鈕
        document.getElementById("saveButton").addEventListener("click", function () {
            isEditing = false;

            // 取得新的備註內容
            var noteText = document.getElementById("inventoryNoteEdit").value;

            // 執行 AJAX 提交邏輯
            saveData(noteText);

            // 變回唯讀模式
            setEditable(false);

            // 更新備註顯示內容
            document.getElementById("inventoryNoteView").innerText = noteText;

            // 切換回 div 顯示，隱藏 textarea
            document.getElementById("inventoryNoteView").classList.remove("d-none");
            document.getElementById("inventoryNoteEdit").classList.add("d-none");

            // 切換按鈕顯示
            this.classList.add("d-none"); // 隱藏儲存按鈕
            document.getElementById("editButton").classList.remove("d-none"); // 顯示修改按鈕
        });
    });

    // 控制欄位的可編輯狀態
    function setEditable(editable) {
        var inputs = document.querySelectorAll('table input[type="number"]');
        inputs.forEach(function (input) {
            input.disabled = !editable;
        });

        document.getElementById('syncStockButton').disabled = !editable;
        document.getElementById('resetStockButton').disabled = !editable;

        // 切換備註欄的顯示方式
        if (editable) {
            document.getElementById("inventoryNoteView").classList.add("d-none");
            document.getElementById("inventoryNoteEdit").classList.remove("d-none");
        } else {
            document.getElementById("inventoryNoteView").classList.remove("d-none");
            document.getElementById("inventoryNoteEdit").classList.add("d-none");
        }
    }

        function saveData(noteText) {
        var currentId = parseInt(document.querySelector('input[name="currentId"]').value, 10);
        var FBaselineDate = document.getElementById('FBaselineDate').value;
        var formattedBaselineDate = FBaselineDate;
        var formattedCreatedAt = new Date().toISOString().split("T")[0];

        var inventoryMain = {
            FBaselineDate: formattedBaselineDate,
            FCreatedAt: formattedCreatedAt,
            FEditor: 1,
            FNote: noteText // 只更新 FNote
        };

        var products = [];
        var inventoryDetails = [];
        var rows = document.querySelectorAll("table tbody tr");

        var hasQuantityChange = false; // 判斷是否有數量變更

        rows.forEach(function (row) {
            var inventoryMainId = parseInt(row.querySelector("input[name='FInventoryMainId']").value, 10);
            var productId = parseInt(row.querySelector("td:nth-child(1)").innerText, 10);
            var actualQuantity = parseInt(row.querySelector("input[name='FActualQuantity']").value, 10);
            var systemQuantity = parseInt(row.querySelector("td:nth-child(3)").innerText, 10);
            var productName = row.querySelector("td:nth-child(2)").innerText;
            var fId = parseInt(row.querySelector("input[name='FInventoryDetailId']").value, 10);

            var differenceQuantity = actualQuantity - systemQuantity;

            if (differenceQuantity !== 0) {
                hasQuantityChange = true; // 如果有數量變更，設定為 true

                // **只儲存有變動的庫存項目**
                inventoryDetails.push({
                    InventoryDetail: {
                        FId: fId,
                        FInventoryMainId: inventoryMainId,
                        FInventoryDetailId: fId,
                        FActualQuantity: actualQuantity,
                        FProductId: productId,
                        FSystemQuantity: systemQuantity
                    },
                    FName: productName,
                    DifferenceQuantity: differenceQuantity
                });

                products.push({
                    FId: productId,
                    FQuantity: actualQuantity,
                    FName: productName
                });
            }
        });

        var requestData = {
            currentId: currentId,
            InventoryMain: inventoryMain,
            InventoryDetails: []
        };

        if (hasQuantityChange) {
            // **只有當有變動時，才包含 `InventoryDetails` 和相關調整資訊**
            requestData.InventoryDetails = inventoryDetails;
            requestData.Products = products;
            requestData.InventoryAdjustmentDetail = [];
            requestData.InventoryAdjustment = [];
        }

        console.log(requestData);

        $.ajax({
            url: '/Inventory/Save/' + currentId,
            method: 'POST',
            data: JSON.stringify(requestData),
            contentType: 'application/json',
            success: function (response) {
                if (response.success) {
                    if (response.redirectTo) {
                        window.location.href = response.redirectTo; // 有跳轉頁面
                        alert("檢測到庫存數量變更，將儲存並跳轉到盤點調整作業");
                    } else {
                        alert("備註更新成功！"); // 只更新 FNote，不跳轉
                    }
                } else {
                    alert('錯誤: ' + response.error);
                }
            },
            error: function (xhr, status, error) {
                alert("錯誤: " + error);
            }
        });
    }
</script>

<!-- 刪除 -->
<script>
    document.getElementById('deletebutton').addEventListener('click', function () {
        const inventoryId = document.querySelector('input[name="currentId"]').value;

        if (confirm('您確定要刪除此盤點資料嗎？此操作無法撤銷！')) {
            fetch('@Url.Action("DeleteConfirmed", "Inventory")', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/x-www-form-urlencoded'
                },
                body: `id=${inventoryId}`, 
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    window.location.href = data.redirectTo;
                } else {
                    alert('刪除失敗，請稍後再試。');
                }
            })
            .catch(error => {
                console.error('錯誤:', error);
                alert('發生錯誤，請稍後再試。');
            });
        }
    });
</script>

<!-- 新增 -->
<script>
        document.getElementById('addButton').addEventListener('click', function () {
        const url = this.getAttribute('data-url');
    });
</script>

<!-- 列印 -->
<script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/print-js/1.6.0/print.min.js"></script>
<script>
    function printTable() {
        printJS({
            printable: 'printTable',
            type: 'html',
            style: `
                table { width: 100%; border-collapse: collapse; }
                caption { display: block !important; text-align: center; font-size: 16px; font-weight: bold; margin-bottom: 10px; } /* 讓標題顯示 */
                th, td { text-align: center !important; vertical-align: middle !important; padding: 4px !important; } /* 縮小格子高度 */
                thead tr { border-bottom: 2px solid black !important; } /* 標題下方黑色橫線 */
                tbody tr { border-bottom: 1px solid gray !important; } /* 其他橫線為灰色 */
                th, td { border: none !important; } /* 移除所有直線 */
            `
        });
    }
</script>

<!-- 將系統庫存數量帶入實際庫存數量 -->
<script>
    document.getElementById('syncStockButton').addEventListener('click', function () {
        const rows = document.querySelectorAll('table tbody tr');

        rows.forEach(row => {
            const systemQuantity = row.querySelector('td:nth-child(3)');
            const actualQuantityInput = row.querySelector('td:nth-child(4) input');

            if (systemQuantity && actualQuantityInput) {
                const systemQuantityValue = systemQuantity.textContent.trim();
                actualQuantityInput.value = systemQuantityValue;
            }
        });
    });
</script>

<!-- 將實際庫存數量歸零 -->
<script>
    document.getElementById('resetStockButton').addEventListener('click', function () {
        const rows = document.querySelectorAll('table tbody tr');

        rows.forEach(row => {
            const actualQuantityInput = row.querySelector('td:nth-child(4) input');

            if (actualQuantityInput) {
                actualQuantityInput.value = 0;
            }
        });
    });
</script>