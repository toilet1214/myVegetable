@model IEnumerable<prjVegetable.Models.CProductWrap>

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_LayoutERP.cshtml";
}
@section Styles {
    <style>
        /*放大鏡*/
        .btn-no-background {
            background: transparent;
            border: none;
            font-size: 20px;
            cursor: pointer;
        }

            .btn-no-background i {
                font-size: 24px; /* 放大鏡圖示大小 */
                color: #333; /* 圖示顏色，您可以根據需要更改顏色 */
            }

            .btn-no-background:hover i {
                color: #c1a06a; /* 鼠標懸停時變 深土黃色 */
            }


        /* 設定 select 樣式 */
        /* 設定初始背景顏色為淡土黃色 */
        .styled-select {
            background-color: #d7c9b0ff; /* 淺土黃色 */
            border: 1px solid #ccc; /* 邊框顏色 */
            padding: 6px 12px; /* 內邊距 */
            font-size: 16px; /* 字體大小 */
            border-radius: 5px; /* 圓角邊框 */
            appearance: none; /* 去除瀏覽器預設樣式 */
            -webkit-appearance: none;
            -moz-appearance: none;
        }

            /* 移除選中時的藍色背景 */
            .styled-select:focus,
            .styled-select:hover {
                background-color: #e1d1a6;
            }

            /* 修改 option 的 hover 樣式，讓它與背景一致 */
            .styled-select option:hover,
            .styled-select option:focus {
                background-color: #c1a06a !important; /* 深土黃色 */
                color: #8d8266ff;
            }


        div.dt-container .dt-search input {
            width: 325px !important;
            border: 1px solid #aaa;
            border-radius: 3px;
            padding: 5px;
            background-color: transparent;
            color: inherit;
            margin-left: 3px;
        }



        table {
            width: 100%; /* 使表格佔滿容器的寬度 */

            table-layout: fixed; /* 使用固定布局讓欄位寬度平均 */
        }

        th, td {
            text-align: center; /* 使所有欄位內容居中 */
        }
    </style>
}

<h1>商品資料列表</h1>
<br />

<div class="d-flex justify-content-between align-items-center mb-3">
    <div>
        <a asp-action="Create" class="btn btn-outline-primary">新增資料</a>
    </div>
    <div class="d-flex align-items-center gap-2">
        <form method="get" action="@Url.Action("Index", "Products")" id="filterOptions" class="d-flex gap-2">
            <button type="submit" class="btn-no-background">
                <i class="bi bi-search"></i>
            </button>
            <select name="SelectedCategory" class="styled-select">
                <option value="">選擇分類</option>
                <option value="根莖">根莖</option>
                <option value="葉菜">葉菜</option>
                <option value="水果">水果</option>
                <option value="蕈菇">蕈菇</option>
                <option value="蔬菜箱">蔬菜箱</option>
                <option value="其他">其他</option>
            </select>

            <select name="SelectedStorage" class="styled-select">
                <option value="">選擇藏溫方式</option>
                <option value="冷凍">冷凍</option>
                <option value="冷藏">冷藏</option>
                <option value="常溫">常溫</option>
            </select>

            <select name="SelectedStatus" class="styled-select">
                <option value="">選擇上下架</option>
                <option value="上架">上架</option>
                <option value="下架">下架</option>
            </select>
        </form>
    </div>
</div>


<table class="table" id="List">
    <thead>
        <tr>
            <th>
                序
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FImgName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FClassification)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FPrice)
            </th>
            @* <th>
            @Html.DisplayNameFor(model => model.FDescription)
            </th> *@
            @* <th>
            @Html.DisplayNameFor(model => model.FIntroduction)
            </th> *@
            <th>
                @Html.DisplayNameFor(model => model.FQuantity)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FLaunchAt)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FStorage)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FOrigin)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FLaunch)
            </th>
            <th>操作</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.product.FId)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.product.FName)
                </td>
                <td>
                    <div>
                        @if (item.ImgList.Any())
                        {
                            <div class="">
                                <img src="~/Images/@item.ImgList.First()" class="w-50 d-inline-block" alt="Product Image" />
                            </div>
                        }

                    </div>

                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.product.FClassification)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.product.FPrice)
                </td>
                @* <td>
            @Html.DisplayFor(modelItem => item.product.FDescription)
            </td> *@
                @* <td>
            @Html.DisplayFor(modelItem => item.product.FIntroduction)
            </td> *@
                <td>
                    @Html.DisplayFor(modelItem => item.product.FQuantity)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.product.FLaunchAt)
                </td>
                <td>
                    @if (item.product.FStorage == 0)
                    {
                        @:冷凍
                    }
                    else if (item.product.FStorage == 1)
                    {
                        @:冷藏
                    }
                    else if (item.product.FStorage == 2)
                    {
                        @:常溫
                    }
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.product.FOrigin)
                </td>
                <td>
                    @if (item.product.FLaunch == 0)
                    {
                        @:下架
                    }
                    else if (item.product.FLaunch == 1)
                    {
                        @:上架
                    }
                </td>
                <td>
                    @* <a asp-action="Edit" asp-route-id="@item.FId">編輯資料</a><br /> *@
                    <a asp-action="Details" asp-route-id="@item.FId" class="btn btn-secondary mb-2">詳細資料</a><br />
                    <a href="javascript:void(0);" class="btn btn-danger delete-link" data-id="@item.FId">&emsp;移除&emsp;</a>
                </td>
            </tr>
        }
    </tbody>
</table>

@section Scripts {
    <script>
        function deleteProducts(id) {
            Swal.fire({
                title: '確定要刪除這筆資料嗎？',
                text: '這個動作無法復原！',
                icon: 'warning',
                showCancelButton: true,  // 顯示取消按鈕
                confirmButtonText: '刪除',
                cancelButtonText: '取消',
                reverseButtons: true  // 反轉按鈕順序
            }).then((result) => {
                if (result.isConfirmed) {
                    // 確保刪除的請求 URL 正確
                    axios.post(`/Products/Delete/${id}`).then(() => {
                        Swal.fire('已刪除', '資料已成功刪除', 'success');
                        location.reload();
                    }).catch(error => {
                        console.error('刪除失敗', error);
                        Swal.fire('錯誤!!', '刪除資料失敗，請稍後再試', 'error');
                    });
                }
            });
        }

        document.addEventListener('DOMContentLoaded', function () {
            document.querySelectorAll('.delete-link').forEach(function (deleteLink) {
                deleteLink.addEventListener('click', function (e) {
                    e.preventDefault();

                    const id = deleteLink.getAttribute('data-id');  // 使用正確的屬性名稱
                    deleteProducts(id);
                });
            });
        });

        $(document).ready(function () {
            $('#List').DataTable({
                "paging": true, // 啟用分頁
                "lengthChange": false, // 允許用戶改變每頁顯示數量
                "searching": true, // 啟用搜尋
                "ordering": true, // 啟用排序
                "info": true, // 顯示資訊
                "autoWidth": false, // 禁用自動調整寬度
                "language": {
                    "lengthMenu": "顯示 _MENU_ 筆資料",
                    "zeroRecords": "沒有符合的訂單",
                    "info": "顯示第 _START_ 到 _END_ 筆，共 _TOTAL_ 筆",
                    "infoEmpty": "沒有可顯示的資料",
                    "infoFiltered": "(從 _MAX_ 筆資料過濾)",
                    "search": "搜尋：",
                    "paginate": {
                        "first": "第一頁",
                        "last": "最後一頁",
                        "next": "下一頁",
                        "previous": "上一頁"
                    }
                },
                "lengthMenu": [5, 10, 25, 50], // 選擇每頁顯示 5, 10, 25, 50 筆
                "lengthChange": true, // 允許改變筆數
            });
        });
    </script>
}
