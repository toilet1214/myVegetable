@model prjVegetable.ViewModels.CInventoryAdjustmentViewModel
@{
    Layout = "~/Views/Shared/_LayoutERP.cshtml";
}

<!--

庫存調整作業 InventoryAdjustment/Detail

*沒有查詢到的筆數
*還沒有帶入使用者ID
*列印 沒有庫存盤點單號、調整日期、盤點人員

-->

<style>
    /*主單*/
    .modal-table-container {
        max-height: 70vh; /* 設定最大高度 */
        overflow-y: auto; /* 垂直滾動條 */
        overflow-x: hidden; /* 禁止水平滾動 */
    }

    .table-bordered {
        margin-bottom: 0; /* 移除表格底部多餘空間 */
    }

    /*細項*/
    .table-container {
        max-height: 400px; /* 限制表格容器的高度 */
        overflow-y: auto; /* 超過高度時顯示垂直滾動條 */
        border: 1px solid #ddd; /* 可選：為表格容器加上邊框 */
    }

    .table {
        width: 100%; /* 讓表格寬度充滿容器 */
        border-collapse: collapse; /* 消除表格的內邊距 */
    }

        .table th, .table td {
            padding: 8px;
            text-align: center; /* 文字居中 */
        }

        .table th {
            background-color: #f8f9fa; /* 可選：表頭背景色 */
            font-weight: bold; /* 加粗表頭文字 */
        }

</style>
<div class="container my-5">
    <!-- 工具列 start -->
    <div class="row d-block mb-3">
        <div class="btn-group" role="group" aria-label="Basic example">
            <button type="button" id="searchButton" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#exampleModal">
                查詢
            </button>
            <a href="@Url.Action("Detail", "InventoryAdjustment", new { id = 1 })"
               class="btn btn-primary"
               data-is-first="@ViewData["IsFirstRecord"]?.ToString().ToLower()"
               id="firstRecordButton">
                <i class="bi bi-skip-start-fill me-2"></i>第一筆
            </a>
            <a href="@Url.Action("Detail", "InventoryAdjustment", new { id = ViewData["PreviousId"] })"
               class="btn btn-primary"
               data-is-first="@ViewData["IsFirstRecord"]?.ToString().ToLower()"
               id="previousRecordButton">
                <i class="bi bi-caret-left-fill me-2"></i>上一筆
            </a>
            <a href="@Url.Action("Detail", "InventoryAdjustment", new { id = ViewData["NextId"] })"
               class="btn btn-primary"
               id="nextRecordButton"
               data-is-last="@ViewData["IsLastRecord"]?.ToString().ToLower()">
                <i class="bi bi-caret-right-fill me-2"></i>下一筆
            </a>
            <a href="@Url.Action("Detail", "InventoryAdjustment", new { id = ViewData["LastId"] })"
               class="btn btn-primary"
               id="lastRecordButton"
               data-is-last="@ViewData["IsLastRecord"]?.ToString().ToLower()">
                <i class="bi bi-skip-end-fill me-2"></i>最後一筆
            </a>

            <button type="button" id="addButton" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#addModal" disabled>
                <i class="bi bi-file-earmark me-2"></i>新增
            </button>
            <button type="button" class="btn btn-primary" id="editButton" data-ignore-exit>
                <i class="bi bi-pencil me-2"></i>編輯
            </button>
            <button type="button" class="btn btn-primary d-none" id="saveButton">
                <i class="bi bi-floppy me-2"></i>儲存
            </button>
            <button type="button" class="btn btn-primary" id="deletebutton">
                <i class="bi bi-trash me-2"></i>刪除
            </button>
            <button type="button" class="btn btn-primary me-2" id="printButton" onclick="printTable()">
                <i class="bi bi-printer me-2"></i>列印
            </button>
        </div>
    </div>
    <!-- 工具列 end -->
    <hr />
    <div class="row">
        <div class="row">
            <div class="col-5">
                <!-- 庫存盤點單號 -->
                <div class="d-flex mb-0 align-items-center">
                    <label asp-for="InventoryAdjustment.FId" class="pe-1 mb-3">庫存調整單號</label>
                    <input asp-for="InventoryAdjustment.FId" class="form-control form-control-sm w-auto mb-3 ms-auto" type="text" readonly />
                    <span asp-validation-for="InventoryAdjustment.FId" class="text-danger"></span>
                </div>
                <!-- 調整日期 -->
                <div class="d-flex mb-0 align-items-center">
                    <label asp-for="InventoryAdjustment.FAdjustmentDate" class="pe-1 mb-3">調整日期</label>
                    <input asp-for="InventoryAdjustment.FAdjustmentDate" class="form-control form-control-sm w-auto mb-3 ms-auto" type="text" readonly />
                    <span asp-validation-for="InventoryAdjustment.FAdjustmentDate" class="text-danger"></span>
                </div>
                <!-- 盤點人員 -->
                <div class="d-flex align-items-center">
                    <label asp-for="InventoryAdjustment.FCheckerId" class="pe-1 mb-3">盤點人員名稱</label>
                    <input class="form-control form-control-sm w-auto mb-3 ms-auto" type="text" value="@ViewData["CheckerName"]" readonly />
                    <span asp-validation-for="InventoryAdjustment.FCheckerId" class="text-danger"></span>
                </div>

            </div>
            <div class="col-7 d-flex">
                <div id="inventoryNoteView" class="p-3 border border-primary rounded w-100">@Model.InventoryAdjustment.FNote</div>
                <textarea id="inventoryNoteEdit" class="form-control d-none w-100">@Model.InventoryAdjustment.FNote</textarea>
            </div>
            <input type="hidden" name="currentId" value="@Model.InventoryAdjustment.FId" />
        </div>
    </div>
    <hr />
    <div>
        <div class="table-container">
            <table class="table text-center" id="printTable">
                <thead>
                    <tr>
                        <th>商品Id</th>
                        <th>商品名稱</th>
                        <th>調整數量</th>
                        <th>成本</th>
                        <th>金額</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model.InventoryAdjustmentDetail)
                    {
                        <tr>
                            <td>@item.InventoryAdjustmentDetail.FProductId</td>
                            <td>@item.FName</td>
                            <td>@item.InventoryAdjustmentDetail.FQuantity</td>
                            <td>@item.FCost</td>
                            <td>@(@item.FCost * item.InventoryAdjustmentDetail.FQuantity)</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>

    </div>
</div>

<!-- 選擇條件來查詢 -->
<div class="modal fade" id="exampleModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">輸入盤點條件查詢</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <!-- 庫存調整單號 -->
                <div class="d-flex mb-3 align-items-center">
                    <label asp-for="InventoryAdjustment.FId" class="pe-1 mb-0" style="width: 150px;">庫存調整單號</label>
                    <input asp-for="InventoryAdjustment.FId" class="form-control form-control-sm w-auto" type="text" id="searchFId" value="" />
                    <span asp-validation-for="InventoryAdjustment.FId" class="text-danger"></span>
                </div>

                <!-- 庫存盤點日期 -->
                <div class="d-flex mb-3 align-items-center">
                    <label asp-for="InventoryAdjustment.FAdjustmentDate" class="pe-1 mb-0" style="width: 150px;">庫存調整日期</label>
                    <input asp-for="InventoryAdjustment.FAdjustmentStartDate" class="form-control form-control-sm w-auto" type="date" id="FAdjustmentStartDate" />
                    <span class="mx-2">至</span>
                    <input asp-for="InventoryAdjustment.FAdjustmentEndDate" class="form-control form-control-sm w-auto" type="date" id="FAdjustmentEndDate" />
                    <span asp-validation-for="InventoryAdjustment.FAdjustmentDate" class="text-danger"></span>
                </div>

                <!-- 選擇盤點人員 -->
                <div class="d-flex align-items-center">
                    <label asp-for="InventoryAdjustment.FCheckerId" class="pe-1 mb-0" style="width: 150px;">盤點人員</label>
                    <select asp-for="InventoryAdjustment.FCheckerId" class="form-select form-select-sm w-auto" id="FCheckerId">
                        <option value="">請選擇</option>
                        @if (ViewData["Employees"] != null)
                        {
                            foreach (var employee in (SelectList)ViewData["Employees"])
                            {
                                <option value="@employee.Value">@employee.Text</option>
                            }
                        }
                    </select>

                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">取消</button>
                <button type="button" class="btn btn-primary" id="modalSearchButton">確定</button>
            </div>
        </div>
    </div>
</div>

<!-- 查詢結果視窗 -->
<div class="modal fade" id="inventoryAdjustmentListModal" tabindex="-1" role="dialog" aria-labelledby="inventoryListModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="inventoryListModalLabel">選擇盤點單號</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body modal-table-container">
                <table class="table table-bordered">
                    <thead>
                        <tr>
                            <th>盤點單號</th>
                            <th>盤點基準日</th>
                            <th>盤點人員</th>
                            <th>備註</th>
                        </tr>
                    </thead>
                    <tbody id="inventoryAdjustmentListTableBody">
                        <!-- 這裡會透過 JS 動態填入資料 -->
                    </tbody>
                </table>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary" id="confirmSelection">確定</button>
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">取消</button>
            </div>
        </div>
    </div>
</div>
<script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>

<!-- 查詢 -->
<script>
        let inventoryAdjustmentList = []; // 儲存查詢結果
    let selectedInventoryAdjustmentId = null; // 使用者選擇的 InventoryAdjustmentId

    // 綁定查詢按鈕事件
    document.getElementById('modalSearchButton').addEventListener('click', function () {
        const fId = document.getElementById('searchFId').value.trim();
        const fAdjustmentStartDate = document.getElementById('FAdjustmentStartDate').value.trim();
        const fAdjustmentEndDate = document.getElementById('FAdjustmentEndDate').value.trim();
        const fCheckerId = document.getElementById('FCheckerId').value.trim();

        // 檢查是否至少輸入一個條件
        if (!fId && !fAdjustmentStartDate && !fAdjustmentEndDate && !fCheckerId) {
            alert('請至少填寫一個查詢條件');
            return;
        }

        const requestData = {
            fId: fId || null,
            fAdjustmentStartDate: fAdjustmentStartDate || null,
            fAdjustmentEndDate: fAdjustmentEndDate || null,
            fCheckerId: fCheckerId || null
        };

        // 發送 AJAX 查詢請求
        $.ajax({
            url: '/InventoryAdjustment/Search',
            type: 'GET',
            data: requestData,
            success: function (response) {
                console.log("AJAX 成功回應！", response);

                if (response.inventoryAdjustmentList && response.inventoryAdjustmentList.length > 0) {
                    console.log("收到 InventoryAdjustmentList！", response.inventoryAdjustmentList);

                    const tableBody = document.getElementById('inventoryAdjustmentListTableBody');
                    tableBody.innerHTML = ''; // 清空表格

                    response.inventoryAdjustmentList.forEach(item => {
                        let row = `
                        <tr class="inventory-row" data-id="${item.fId}">
                            <td>${item.fId}</td>
                            <td>${item.fAdjustmentDate ?? ''}</td>
                            <td>${item.fCheckerName ?? ''}</td>
                            <td>${item.fNote ?? ''}</td>
                        </tr>`;
                        tableBody.insertAdjacentHTML('beforeend', row);
                    });

                    // 顯示查詢結果視窗
                    $("#inventoryAdjustmentListModal").modal("show");
                } else {
                    console.error("沒有收到 InventoryAdjustmentList！", response);
                    alert('查無符合條件的資料');
                }
            },
            error: function (xhr, status, error) {
                console.error("查詢發生錯誤！", error);
                alert('查詢失敗，請稍後再試');
            }
        });
    });

    // 綁定表格行點擊事件
    $(document).on('click', '.inventory-row', function () {
        selectedInventoryAdjustmentId = $(this).data('id');
        $('.inventory-row').removeClass('table-active'); // 移除其他行的高亮
        $(this).addClass('table-active'); // 高亮當前行

        const container = $('.modal-table-container'); // 表格滾動容器
        const row = $(this); // 被點擊的行
        container.animate({
            scrollTop: container.scrollTop() + row.position().top - container.height() / 2 + row.height() / 2
        }, 300); // 滾動到該行
    });

    // 禁用滾動功能（選用，避免頁面滾動）
    function disableBodyScroll() {
        document.body.style.overflow = 'hidden';
    }

    function enableBodyScroll() {
        document.body.style.overflow = '';
    }

    const modal = document.getElementById('inventoryAdjustmentListModal');
    modal.addEventListener('show.bs.modal', disableBodyScroll);
    modal.addEventListener('hide.bs.modal', enableBodyScroll);

    // 綁定確認按鈕，進行跳轉
    document.getElementById('confirmSelection').addEventListener('click', function () {
        if (!selectedInventoryAdjustmentId) {
            alert('請選擇一個調整單號');
            return;
        }
        console.log("即將跳轉到:", `/InventoryAdjustment/Detail/${selectedInventoryAdjustmentId}`);
        window.location.href = `/InventoryAdjustment/Detail/${selectedInventoryAdjustmentId}`;
    });

</script>

<!-- 編輯/儲存 -->
<script>
    document.addEventListener("DOMContentLoaded", function () {
        // 初始設定：讓備註欄處於唯讀狀態
        setEditable(false);

        // 監聽「編輯」按鈕
        document.getElementById("editButton").addEventListener("click", function () {
            setEditable(true);
            this.classList.add("d-none"); // 隱藏修改按鈕
            document.getElementById("saveButton").classList.remove("d-none"); // 顯示儲存按鈕
        });

        // 監聽「儲存」按鈕
        document.getElementById("saveButton").addEventListener("click", function () {
            // 取得新的 FNote 內容
            var noteText = document.getElementById("inventoryNoteEdit").value;

            // 執行 AJAX 提交
            saveFNote(noteText);
        });
    });

    // 切換備註欄的可編輯狀態
    function setEditable(editable) {
        if (editable) {
            document.getElementById("inventoryNoteView").classList.add("d-none");
            document.getElementById("inventoryNoteEdit").classList.remove("d-none");
        } else {
            document.getElementById("inventoryNoteView").classList.remove("d-none");
            document.getElementById("inventoryNoteEdit").classList.add("d-none");
        }
    }

        function saveFNote(noteText) {
        var currentId = parseInt(document.querySelector('input[name="currentId"]').value, 10);

        var requestData = [
        {
            FId: currentId,
            FNote: noteText
        }];


        console.log(requestData);

        $.ajax({
            url: '/InventoryAdjustment/Save/' + currentId,
            method: 'POST',
            data: JSON.stringify(requestData),
            contentType: 'application/json',
            success: function (response) {
                if (response.success) {
                    document.getElementById("inventoryNoteView").innerText = noteText;
                    setEditable(false);
                    document.getElementById("saveButton").classList.add("d-none");
                    document.getElementById("editButton").classList.remove("d-none");
                    alert("備註更新成功！");
                } else {
                    alert('錯誤: ' + response.error);
                }
            },
            error: function (xhr, status, error) {
                alert("錯誤: " + error);
            }
        });
    }

</script>

<!-- 刪除 -->
<script>
    document.getElementById('deletebutton').addEventListener('click', function () {
        const inventoryAdjustmentsId = document.querySelector('input[name="currentId"]').value;

        if (confirm('您確定要刪除此調整資料嗎？此操作無法撤銷！')) {
            fetch('@Url.Action("DeleteConfirmed", "InventoryAdjustment")', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/x-www-form-urlencoded'
                },
                body: `id=${inventoryAdjustmentsId}`,
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    window.location.href = data.redirectTo;
                } else {
                    alert('刪除失敗，請稍後再試。');
                }
            })
            .catch(error => {
                console.error('錯誤:', error);
                alert('發生錯誤，請稍後再試。');
            });
        }
    });
</script>

<!-- 列印 -->
<script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/print-js/1.6.0/print.min.js"></script>
<script>
    function printTable() {
        printJS({
            printable: 'printTable',
            type: 'html',
            style: `
                table { width: 100%; border-collapse: collapse; }
                caption { display: block !important; text-align: center; font-size: 16px; font-weight: bold; margin-bottom: 10px; } /* 讓標題顯示 */
                th, td { text-align: center !important; vertical-align: middle !important; padding: 4px !important; } /* 縮小格子高度 */
                thead tr { border-bottom: 2px solid black !important; } /* 標題下方黑色橫線 */
                tbody tr { border-bottom: 1px solid gray !important; } /* 其他橫線為灰色 */
                th, td { border: none !important; } /* 移除所有直線 */
            `
        });
    }
</script>

<!-- 第一筆與最後一筆資料提示 -->
<!-- 由前端判斷，可以減少伺服器的負擔-->
<script>
     document.addEventListener("DOMContentLoaded", function () {
        const firstRecordButton = document.getElementById("firstRecordButton");
        const previousRecordButton = document.getElementById("previousRecordButton");
        const nextRecordButton = document.getElementById("nextRecordButton");
        const lastRecordButton = document.getElementById("lastRecordButton");

        // 第一筆按鈕事件
        if (firstRecordButton) {
            firstRecordButton.addEventListener("click", function (event) {
                if (firstRecordButton.dataset.isFirst === "true") {
                    event.preventDefault(); // 防止跳轉
                    alert("已是第一筆資料！");
                }
            });
        }

        // 上一筆按鈕事件
        if (previousRecordButton) {
            previousRecordButton.addEventListener("click", function (event) {
                if (firstRecordButton.dataset.isFirst === "true") {
                    event.preventDefault(); // 防止跳轉
                    alert("已是第一筆資料！");
                }
            });
        }

        // 下一筆按鈕事件
        if (nextRecordButton) {
            nextRecordButton.addEventListener("click", function (event) {
                if (nextRecordButton.dataset.isLast === "true") {
                    event.preventDefault(); // 防止跳轉
                    alert("已是最後一筆資料！");
                }
            });
        }

        // 最後一筆按鈕事件
        if (lastRecordButton) {
            lastRecordButton.addEventListener("click", function (event) {
                if (lastRecordButton.dataset.isLast === "true") {
                    event.preventDefault(); // 防止跳轉
                    alert("已是最後一筆資料！");
                }
            });
        }
    });
</script>