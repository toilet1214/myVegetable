@model IEnumerable<prjVegetable.Models.CPersonWrap>

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_LayoutERP.cshtml";
}

<h1>人員資料列表</h1>
<br />
<div id="app">
    <div>
        <label class="form-label">搜尋</label>
        <input v-model="keyword" placeholder="請輸入搜尋" />
        <button type="button" class="btn btn-primary" @@click="search">查詢</button>
    </div>
    <!-- 新增資料 -->
    <p>
        <a href="/Person/Create" class="btn btn-outline-primary">新增資料</a>
    </p>
    <!-- 顯示資料 -->
    <table class="table" id="List">
        <thead>
            <tr>
                <th @@click ="sort('fId')">序號</th>
                <th @@click ="sort('fId')">ID</th>
                <th @@click ="sort('fName')">姓名</th>
                <th @@click ="sort('fAccount')">帳號</th>
                <th @@click ="sort('fPassword')">密碼</th>
                <th @@click ="sort('fGender')">性別</th>
                <th @@click ="sort('fBirth')">生日</th>
                <th @@click ="sort('fPhone')">手機</th>
                <th @@click ="sort('fTel')">家用電話</th>
                <th @@click ="sort('fEmail')">電子郵件</th>
                <th>操作</th>
            </tr>
        </thead>
        <tbody v-if="paginatedPeople.length > 0">
            <tr v-for="(item, index) in paginatedPeople" :key="item.fId">
                <td>{{ index + 1 + (currentPage - 1) * itemsPerPage }}</td>                
                <th>{{item.fId}}</th>
                <td>{{ item.fName }}</td>
                <th>{{item.fAccount}}</th>
                <th>{{item.fPassword}}</th>               
                <td>{{ item.fGender }}</td>
                <td>{{ item.fBirth }}</td>
                <td>{{ item.fPhone }}</td>
                <td>{{ item.fTel }}</td>
                <td>{{ item.fEmail }}</td>
                <td>
                    <a :href="'/Person/Edit/' + item.fId">編輯資料</a><br />
                    <a :href="'/Person/Details/' + item.fId">詳細資料</a><br />
                    <a :href="'/Person/Delete?id=' + item.fId" @@click.prevent="confirmDelete(item.fId)">移除</a>
                </td>
            </tr>
        </tbody>
    </table>

    @*分頁*@
    <div class="pagination">
        <button :disabled="currentPage === 1" @@click ="goToPage(currentPage - 1)">上一頁</button>
        <span>頁碼: {{ currentPage }}</span>
        <button :disabled="currentPage === totalPages" @@click ="goToPage(currentPage + 1)">下一頁</button>
    </div>
</div>

@section Scripts {
    
    <script>
        const app = Vue.createApp({
            data() {
                return {
                    CPersonWrap: [], // 儲存所有人員資料
                    keyword: "", // 搜尋關鍵字
                    currentPage: 1, // 當前頁碼
                    itemsPerPage: 5, // 每頁顯示的項目數量
                    sortColumn: "", // 當前排序的列
                    sortDirection: "asc", // 排序方向
                };
            },
            computed: {
                // 根據分頁顯示的資料
                paginatedPeople() {
                    let filteredPeople = this.CPersonWrap;

                    if (this.keyword) {
                        filteredPeople = filteredPeople.filter(person =>
                            person.fName.includes(this.keyword) ||
                            person.fPhone.includes(this.keyword) ||
                            person.fEmail.includes(this.keyword) ||
                            person.fAddress.includes(this.keyword)
                        );
                    }

                    // 排序
                    if (this.sortColumn) {
                        filteredPeople = filteredPeople.sort((a, b) => {
                            if (this.sortDirection === "asc") {
                                return a[this.sortColumn] > b[this.sortColumn] ? 1 : -1;
                            } else {
                                return a[this.sortColumn] < b[this.sortColumn] ? 1 : -1;
                            }
                        });
                    }

                    // 計算分頁
                    const startIndex = (this.currentPage - 1) * this.itemsPerPage;
                    return filteredPeople.slice(startIndex, startIndex + this.itemsPerPage);
                },
                totalPages() {
                    return Math.ceil(this.CPersonWrap.length / this.itemsPerPage);
                }
            },
            mounted() {
                this.loadPeople();
            },
            methods: {
                // 透過API獲取所有人員資料
                loadPeople() {
                    axios.get('/Person/GetPeople').then(response=>{
                        console.log(response.data);  // 在這裡查看 API 返回的資料
                        this.CPersonWrap=Array.isArray(response.data)?response.data:[];
                    }).catch(error=>{
                        console.error('資料載入錯誤', error)
                    });
                },
                search() {
                    if (this.keyword === '') {
                        this.loadPeople(); // 若沒有搜尋關鍵字，重新載入所有資料
                    } else {
                        this.CPersonWrap = this.CPersonWrap.filter(person =>
                            person.fName.includes(this.keyword) ||
                            person.fPhone.includes(this.keyword) ||
                            person.fEmail.includes(this.keyword) ||
                            person.fAddress.includes(this.keyword)
                        );
                    }
                },
                // 刪除人員資料
                confirmDelete(id) {
                    if (confirm('確定要刪除這筆資料嗎?')) {
                        axios.delete(`/Person/Delete?id=${id}`)
                            .then(() => {
                                // 刪除後重新載入資料
                                this.loadPeople(); // 重新加載資料
                            })
                            .catch(error => {
                                console.error('刪除失敗', error);
                            });
                    }
                },
                // 排序方法
                sort(column) {
                    if (this.sortColumn === column) {
                        // 如果點擊了相同列，則改變排序方向
                        this.sortDirection = this.sortDirection === "asc" ? "desc" : "asc";
                    } else {
                        this.sortColumn = column;
                        this.sortDirection = "asc"; // 默認為升序
                    }
                },
                // 分頁
                goToPage(page) {
                    if (page >= 1 && page <= this.totalPages) {
                        this.currentPage = page;
                    }
                },
            } // 這裡結束 methods 部分
        }); // 這裡結束 Vue.createApp 的程式碼

             
        app.mount('#app'); // 使用 Vue 3 創建並掛載應用
    </script>
}
